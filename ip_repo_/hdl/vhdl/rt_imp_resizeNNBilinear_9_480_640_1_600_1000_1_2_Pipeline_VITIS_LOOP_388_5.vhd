-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity rt_imp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_mat_44_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    in_mat_44_empty_n : IN STD_LOGIC;
    in_mat_44_read : OUT STD_LOGIC;
    resized_mat_45_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    resized_mat_45_full_n : IN STD_LOGIC;
    resized_mat_45_write : OUT STD_LOGIC;
    indexy_V : IN STD_LOGIC_VECTOR (16 downto 0);
    zext_ln399 : IN STD_LOGIC_VECTOR (8 downto 0);
    nextYScale_V : IN STD_LOGIC_VECTOR (16 downto 0);
    ret_V_39 : IN STD_LOGIC_VECTOR (16 downto 0);
    and_ln485 : IN STD_LOGIC_VECTOR (0 downto 0);
    line_buffer_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    line_buffer_V_ce0 : OUT STD_LOGIC;
    line_buffer_V_we0 : OUT STD_LOGIC;
    line_buffer_V_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    line_buffer_V_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    line_buffer_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    line_buffer_V_ce1 : OUT STD_LOGIC;
    line_buffer_V_q1 : IN STD_LOGIC_VECTOR (23 downto 0);
    line_buffer_V_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    line_buffer_V_1_ce0 : OUT STD_LOGIC;
    line_buffer_V_1_we0 : OUT STD_LOGIC;
    line_buffer_V_1_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    line_buffer_V_1_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    line_buffer_V_1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    line_buffer_V_1_ce1 : OUT STD_LOGIC;
    line_buffer_V_1_q1 : IN STD_LOGIC_VECTOR (23 downto 0);
    first_row_index_5 : IN STD_LOGIC_VECTOR (31 downto 0);
    Xscale64_cast11 : IN STD_LOGIC_VECTOR (32 downto 0);
    cmp89 : IN STD_LOGIC_VECTOR (0 downto 0);
    icmp_ln1076_2 : IN STD_LOGIC_VECTOR (0 downto 0);
    icmp_ln1064_4 : IN STD_LOGIC_VECTOR (0 downto 0);
    Wy_V_1 : IN STD_LOGIC_VECTOR (11 downto 0);
    zext_ln1171 : IN STD_LOGIC_VECTOR (11 downto 0);
    read_pixel_1_out_i : IN STD_LOGIC_VECTOR (23 downto 0);
    read_pixel_1_out_o : OUT STD_LOGIC_VECTOR (23 downto 0);
    read_pixel_1_out_o_ap_vld : OUT STD_LOGIC;
    indexy_V_1_out : OUT STD_LOGIC_VECTOR (16 downto 0);
    indexy_V_1_out_ap_vld : OUT STD_LOGIC;
    nextYScale_V_1_out : OUT STD_LOGIC_VECTOR (16 downto 0);
    nextYScale_V_1_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of rt_imp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv10_3E8 : STD_LOGIC_VECTOR (9 downto 0) := "1111101000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_280 : STD_LOGIC_VECTOR (9 downto 0) := "1010000000";
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_lv32_200000 : STD_LOGIC_VECTOR (31 downto 0) := "00000000001000000000000000000000";
    constant ap_const_lv66_3FFE0000000000000 : STD_LOGIC_VECTOR (65 downto 0) := "111111111111100000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv34_9FC00000 : STD_LOGIC_VECTOR (33 downto 0) := "0010011111110000000000000000000000";
    constant ap_const_lv32_9FC00000 : STD_LOGIC_VECTOR (31 downto 0) := "10011111110000000000000000000000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv10_27F : STD_LOGIC_VECTOR (9 downto 0) := "1001111111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln388_reg_1470 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln405_reg_1474 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op72_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln388_fu_540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal in_mat_44_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal resized_mat_45_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln388_reg_1470_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal first_row_index_5_read_reg_1439 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1064_4_read_reg_1429 : STD_LOGIC_VECTOR (0 downto 0);
    signal line_buffer_V_2_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal cmp89_read_read_fu_198_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln1171_cast_fu_506_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal zext_ln1171_cast_reg_1447 : STD_LOGIC_VECTOR (20 downto 0);
    signal Wy_V_1_cast_fu_510_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal Wy_V_1_cast_reg_1454 : STD_LOGIC_VECTOR (23 downto 0);
    signal Xscale64_cast11_cast_fu_514_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal Xscale64_cast11_cast_reg_1459 : STD_LOGIC_VECTOR (64 downto 0);
    signal j_reg_1464 : STD_LOGIC_VECTOR (9 downto 0);
    signal j_reg_1464_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln388_reg_1470_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln388_reg_1470_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln388_reg_1470_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln388_reg_1470_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln388_reg_1470_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln405_fu_558_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1478 : STD_LOGIC_VECTOR (9 downto 0);
    signal Wx_V_reg_1485 : STD_LOGIC_VECTOR (11 downto 0);
    signal Wx_V_reg_1485_pp0_iter2_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal Wx_V_reg_1485_pp0_iter3_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal line_buffer_V_1_addr_gep_fu_354_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_1_addr_1_gep_fu_362_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_2_addr_gep_fu_377_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_2_addr_1_gep_fu_384_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_addr_gep_fu_391_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_addr_1_gep_fu_399_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal A0_V_fu_778_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal A0_V_reg_1556 : STD_LOGIC_VECTOR (7 downto 0);
    signal A0_V_reg_1556_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal A0_V_reg_1556_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal A0_V_reg_1556_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal A0_V_reg_1556_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln232_fu_786_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln232_reg_1561 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln232_3_fu_790_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln232_3_reg_1567 : STD_LOGIC_VECTOR (8 downto 0);
    signal A0_V_1_fu_804_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal A0_V_1_reg_1577 : STD_LOGIC_VECTOR (7 downto 0);
    signal A0_V_1_reg_1577_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal A0_V_1_reg_1577_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal A0_V_1_reg_1577_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal A0_V_1_reg_1577_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln232_7_fu_824_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln232_7_reg_1582 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln232_9_fu_828_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln232_9_reg_1588 : STD_LOGIC_VECTOR (8 downto 0);
    signal A0_V_2_fu_842_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal A0_V_2_reg_1598 : STD_LOGIC_VECTOR (7 downto 0);
    signal A0_V_2_reg_1598_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal A0_V_2_reg_1598_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal A0_V_2_reg_1598_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal A0_V_2_reg_1598_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln232_13_fu_862_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln232_13_reg_1603 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln232_15_fu_866_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln232_15_reg_1609 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_18_fu_921_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_18_reg_1619 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1171_1_fu_936_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_fu_985_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_reg_1636 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_27_fu_1046_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_27_reg_1646 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln717_1_fu_1070_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal line_buffer_V_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_2_ce0 : STD_LOGIC;
    signal line_buffer_V_2_we0 : STD_LOGIC;
    signal line_buffer_V_2_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_2_ce1 : STD_LOGIC;
    signal line_buffer_V_2_q1 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_mux_flag_write_phi_fu_420_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_flag_write_reg_415 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_flag_write_reg_415 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter2_flag_write_reg_415 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_p_Val2_18_phi_fu_434_p6 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter3_p_Val2_18_reg_431 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_mux_p_0_0_041069_phi_fu_448_p6 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter3_p_0_0_041069_reg_445 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter0_p_Val2_20_reg_459 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter1_p_Val2_20_reg_459 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter2_p_Val2_20_reg_459 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter3_p_Val2_20_reg_459 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter4_p_Val2_20_reg_459 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter0_p_0_0_040973_reg_470 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter1_p_0_0_040973_reg_470 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter2_p_0_0_040973_reg_470 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter3_p_0_0_040973_reg_470 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter4_p_0_0_040973_reg_470 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln429_fu_749_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln430_fu_758_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_fu_729_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal nextYScale_V_1_fu_158 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal indexy_V_1_fu_162 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln399_cast_fu_518_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_fu_166 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln388_fu_546_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_allocacmp_j : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal icmp_ln407_fu_552_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lhs_fu_579_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_30_fu_586_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_2_fu_596_p0 : STD_LOGIC_VECTOR (32 downto 0);
    signal r_V_2_fu_596_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_2_fu_596_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal zext_ln1168_1_fu_601_p1 : STD_LOGIC_VECTOR (65 downto 0);
    signal ret_V_fu_605_p2 : STD_LOGIC_VECTOR (65 downto 0);
    signal trunc_ln2_fu_611_p4 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_30_fu_645_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_fu_631_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1547_fu_639_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln255_fu_661_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln255_fu_653_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln3_fu_621_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal indexx_pre_V_fu_667_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_685_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln712_fu_703_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal rhs_fu_695_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal ret_V_17_fu_707_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal not_cmp_i_i173_fu_735_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln427_fu_740_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal idx_nxt_fu_744_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_s_fu_771_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal B0_V_fu_782_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_19_fu_794_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal B0_V_1_fu_814_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_23_fu_832_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal B0_V_2_fu_852_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_28_fu_870_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_19_fu_880_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal B1_V_fu_891_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln232_2_fu_895_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal A1_V_fu_887_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln232_4_fu_904_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_30_fu_899_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_31_fu_908_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln232_5_fu_913_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln232_6_fu_917_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_20_fu_927_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal B1_V_1_fu_949_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln232_8_fu_959_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal A1_V_1_fu_939_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln232_10_fu_968_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_32_fu_963_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_33_fu_972_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln232_11_fu_977_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln232_12_fu_981_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_24_fu_991_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal B1_V_2_fu_1010_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln232_14_fu_1020_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal A1_V_2_fu_1000_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln232_16_fu_1029_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_34_fu_1024_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_35_fu_1033_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln232_17_fu_1038_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln232_18_fu_1042_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_29_fu_1052_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal Wxy_V_fu_1061_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1330_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal Wxy_V_fu_1061_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1336_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1342_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1348_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1354_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1363_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1372_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1381_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal P4_V_fu_1101_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1245_3_fu_1108_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln1245_fu_1111_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal ret_V_19_fu_1115_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln902_fu_1139_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln_fu_1121_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln902_fu_1143_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_20_fu_1149_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_s_fu_1131_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln901_fu_1155_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1390_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal P4_V_1_fu_1171_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1245_8_fu_1178_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln1245_1_fu_1181_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal ret_V_23_fu_1185_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln902_1_fu_1209_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln882_1_fu_1191_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln902_1_fu_1213_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_24_fu_1219_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_29_fu_1201_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln901_2_fu_1225_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1399_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal P4_V_2_fu_1241_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1245_13_fu_1248_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln1245_2_fu_1251_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal ret_V_27_fu_1255_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln902_2_fu_1279_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln882_2_fu_1261_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln902_2_fu_1283_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_28_fu_1289_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_30_fu_1271_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln901_3_fu_1295_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_36_fu_1303_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_34_fu_1233_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_32_fu_1163_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1330_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1330_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1336_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1342_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1348_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1354_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1363_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1372_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1381_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1390_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1399_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1330_ce : STD_LOGIC;
    signal grp_fu_1336_ce : STD_LOGIC;
    signal grp_fu_1342_ce : STD_LOGIC;
    signal grp_fu_1348_ce : STD_LOGIC;
    signal grp_fu_1354_ce : STD_LOGIC;
    signal grp_fu_1363_ce : STD_LOGIC;
    signal grp_fu_1372_ce : STD_LOGIC;
    signal grp_fu_1381_ce : STD_LOGIC;
    signal grp_fu_1390_ce : STD_LOGIC;
    signal grp_fu_1399_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal grp_fu_1330_p00 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_2_fu_596_p10 : STD_LOGIC_VECTOR (64 downto 0);
    signal ap_condition_65 : BOOLEAN;
    signal ap_condition_470 : BOOLEAN;
    signal ap_condition_220 : BOOLEAN;
    signal ap_condition_326 : BOOLEAN;
    signal ap_condition_521 : BOOLEAN;
    signal ap_condition_1213 : BOOLEAN;
    signal ap_condition_351 : BOOLEAN;
    signal ap_condition_1219 : BOOLEAN;
    signal ap_condition_338 : BOOLEAN;
    signal ap_condition_350 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component rt_imp_mul_33ns_32ns_65_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (32 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (64 downto 0) );
    end component;


    component rt_imp_mul_mul_12ns_12ns_24_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component rt_imp_mul_mul_12ns_9s_21_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component rt_imp_mac_muladd_12ns_9s_21s_22_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (20 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component rt_imp_mac_muladd_12ns_10s_22s_23_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (21 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component rt_imp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_line_buffbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (23 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component rt_imp_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    line_buffer_V_2_U : component rt_imp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_line_buffbkb
    generic map (
        DataWidth => 24,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => line_buffer_V_2_address0,
        ce0 => line_buffer_V_2_ce0,
        we0 => line_buffer_V_2_we0,
        d0 => read_pixel_1_out_i,
        q0 => line_buffer_V_2_q0,
        address1 => line_buffer_V_2_address1,
        ce1 => line_buffer_V_2_ce1,
        q1 => line_buffer_V_2_q1);

    mul_33ns_32ns_65_1_1_U62 : component rt_imp_mul_33ns_32ns_65_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 33,
        din1_WIDTH => 32,
        dout_WIDTH => 65)
    port map (
        din0 => r_V_2_fu_596_p0,
        din1 => r_V_2_fu_596_p1,
        dout => r_V_2_fu_596_p2);

    mul_mul_12ns_12ns_24_4_1_U63 : component rt_imp_mul_mul_12ns_12ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1330_p0,
        din1 => grp_fu_1330_p1,
        ce => grp_fu_1330_ce,
        dout => grp_fu_1330_p2);

    mul_mul_12ns_9s_21_4_1_U64 : component rt_imp_mul_mul_12ns_9s_21_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 9,
        dout_WIDTH => 21)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1336_p0,
        din1 => ret_19_fu_794_p2,
        ce => grp_fu_1336_ce,
        dout => grp_fu_1336_p2);

    mul_mul_12ns_9s_21_4_1_U65 : component rt_imp_mul_mul_12ns_9s_21_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 9,
        dout_WIDTH => 21)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1342_p0,
        din1 => ret_23_fu_832_p2,
        ce => grp_fu_1342_ce,
        dout => grp_fu_1342_p2);

    mul_mul_12ns_9s_21_4_1_U66 : component rt_imp_mul_mul_12ns_9s_21_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 9,
        dout_WIDTH => 21)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1348_p0,
        din1 => ret_28_fu_870_p2,
        ce => grp_fu_1348_ce,
        dout => grp_fu_1348_p2);

    mac_muladd_12ns_9s_21s_22_4_1_U67 : component rt_imp_mac_muladd_12ns_9s_21s_22_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 9,
        din2_WIDTH => 21,
        dout_WIDTH => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1354_p0,
        din1 => ret_20_fu_927_p2,
        din2 => grp_fu_1336_p2,
        ce => grp_fu_1354_ce,
        dout => grp_fu_1354_p3);

    mac_muladd_12ns_9s_21s_22_4_1_U68 : component rt_imp_mac_muladd_12ns_9s_21s_22_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 9,
        din2_WIDTH => 21,
        dout_WIDTH => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1363_p0,
        din1 => ret_24_fu_991_p2,
        din2 => grp_fu_1342_p2,
        ce => grp_fu_1363_ce,
        dout => grp_fu_1363_p3);

    mac_muladd_12ns_9s_21s_22_4_1_U69 : component rt_imp_mac_muladd_12ns_9s_21s_22_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 9,
        din2_WIDTH => 21,
        dout_WIDTH => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1372_p0,
        din1 => ret_29_fu_1052_p2,
        din2 => grp_fu_1348_p2,
        ce => grp_fu_1372_ce,
        dout => grp_fu_1372_p3);

    mac_muladd_12ns_10s_22s_23_4_1_U70 : component rt_imp_mac_muladd_12ns_10s_22s_23_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 10,
        din2_WIDTH => 22,
        dout_WIDTH => 23)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1381_p0,
        din1 => ret_18_reg_1619,
        din2 => grp_fu_1354_p3,
        ce => grp_fu_1381_ce,
        dout => grp_fu_1381_p3);

    mac_muladd_12ns_10s_22s_23_4_1_U71 : component rt_imp_mac_muladd_12ns_10s_22s_23_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 10,
        din2_WIDTH => 22,
        dout_WIDTH => 23)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1390_p0,
        din1 => ret_reg_1636,
        din2 => grp_fu_1363_p3,
        ce => grp_fu_1390_ce,
        dout => grp_fu_1390_p3);

    mac_muladd_12ns_10s_22s_23_4_1_U72 : component rt_imp_mac_muladd_12ns_10s_22s_23_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 10,
        din2_WIDTH => 22,
        dout_WIDTH => 23)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1399_p0,
        din1 => ret_27_reg_1646,
        din2 => grp_fu_1372_p3,
        ce => grp_fu_1399_ce,
        dout => grp_fu_1399_p3);

    flow_control_loop_pipe_sequential_init_U : component rt_imp_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_flag_write_reg_415_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln388_fu_540_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_0 = and_ln405_fu_558_p2) and (cmp89_read_read_fu_198_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln388_fu_540_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp89_read_read_fu_198_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                ap_phi_reg_pp0_iter1_flag_write_reg_415 <= ap_const_lv1_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                ap_phi_reg_pp0_iter1_flag_write_reg_415 <= ap_phi_reg_pp0_iter0_flag_write_reg_415;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_flag_write_reg_415_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_470)) then
                if ((ap_const_boolean_1 = ap_condition_65)) then 
                    ap_phi_reg_pp0_iter2_flag_write_reg_415 <= ap_const_lv1_1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_flag_write_reg_415 <= ap_phi_reg_pp0_iter1_flag_write_reg_415;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter4_p_0_0_040973_reg_470_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                if (((first_row_index_5_read_reg_1439 = ap_const_lv32_1) and (icmp_ln388_reg_1470_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_p_0_0_040973_reg_470 <= line_buffer_V_1_q0;
                elsif ((ap_const_boolean_1 = ap_condition_220)) then 
                    ap_phi_reg_pp0_iter4_p_0_0_040973_reg_470 <= line_buffer_V_2_q0;
                elsif (((first_row_index_5_read_reg_1439 = ap_const_lv32_0) and (icmp_ln388_reg_1470_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_p_0_0_040973_reg_470 <= line_buffer_V_q0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_p_0_0_040973_reg_470 <= ap_phi_reg_pp0_iter3_p_0_0_040973_reg_470;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter4_p_Val2_20_reg_459_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                if (((first_row_index_5_read_reg_1439 = ap_const_lv32_1) and (icmp_ln388_reg_1470_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_p_Val2_20_reg_459 <= line_buffer_V_2_q0;
                elsif ((ap_const_boolean_1 = ap_condition_220)) then 
                    ap_phi_reg_pp0_iter4_p_Val2_20_reg_459 <= line_buffer_V_q0;
                elsif (((first_row_index_5_read_reg_1439 = ap_const_lv32_0) and (icmp_ln388_reg_1470_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_p_Val2_20_reg_459 <= line_buffer_V_1_q0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_p_Val2_20_reg_459 <= ap_phi_reg_pp0_iter3_p_Val2_20_reg_459;
                end if;
            end if; 
        end if;
    end process;

    indexy_V_1_fu_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln388_fu_540_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    indexy_V_1_fu_162 <= zext_ln399_cast_fu_518_p1;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indexy_V_1_fu_162 <= indexy_V;
                end if;
            end if; 
        end if;
    end process;

    nextYScale_V_1_fu_158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln388_fu_540_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    nextYScale_V_1_fu_158 <= ret_V_39;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    nextYScale_V_1_fu_158 <= nextYScale_V;
                end if;
            end if; 
        end if;
    end process;

    tmp_fu_166_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln388_fu_540_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    tmp_fu_166 <= add_ln388_fu_546_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    tmp_fu_166 <= ap_const_lv10_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln485))) then
                A0_V_1_reg_1577 <= p_Val2_s_fu_771_p3(15 downto 8);
                A0_V_2_reg_1598 <= p_Val2_s_fu_771_p3(23 downto 16);
                A0_V_reg_1556 <= A0_V_fu_778_p1;
                ret_18_reg_1619 <= ret_18_fu_921_p2;
                ret_27_reg_1646 <= ret_27_fu_1046_p2;
                ret_reg_1636 <= ret_fu_985_p2;
                    zext_ln232_13_reg_1603(7 downto 0) <= zext_ln232_13_fu_862_p1(7 downto 0);
                    zext_ln232_15_reg_1609(7 downto 0) <= zext_ln232_15_fu_866_p1(7 downto 0);
                    zext_ln232_3_reg_1567(7 downto 0) <= zext_ln232_3_fu_790_p1(7 downto 0);
                    zext_ln232_7_reg_1582(7 downto 0) <= zext_ln232_7_fu_824_p1(7 downto 0);
                    zext_ln232_9_reg_1588(7 downto 0) <= zext_ln232_9_fu_828_p1(7 downto 0);
                    zext_ln232_reg_1561(7 downto 0) <= zext_ln232_fu_786_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                A0_V_1_reg_1577_pp0_iter4_reg <= A0_V_1_reg_1577;
                A0_V_1_reg_1577_pp0_iter5_reg <= A0_V_1_reg_1577_pp0_iter4_reg;
                A0_V_1_reg_1577_pp0_iter6_reg <= A0_V_1_reg_1577_pp0_iter5_reg;
                A0_V_1_reg_1577_pp0_iter7_reg <= A0_V_1_reg_1577_pp0_iter6_reg;
                A0_V_2_reg_1598_pp0_iter4_reg <= A0_V_2_reg_1598;
                A0_V_2_reg_1598_pp0_iter5_reg <= A0_V_2_reg_1598_pp0_iter4_reg;
                A0_V_2_reg_1598_pp0_iter6_reg <= A0_V_2_reg_1598_pp0_iter5_reg;
                A0_V_2_reg_1598_pp0_iter7_reg <= A0_V_2_reg_1598_pp0_iter6_reg;
                A0_V_reg_1556_pp0_iter4_reg <= A0_V_reg_1556;
                A0_V_reg_1556_pp0_iter5_reg <= A0_V_reg_1556_pp0_iter4_reg;
                A0_V_reg_1556_pp0_iter6_reg <= A0_V_reg_1556_pp0_iter5_reg;
                A0_V_reg_1556_pp0_iter7_reg <= A0_V_reg_1556_pp0_iter6_reg;
                Wx_V_reg_1485_pp0_iter2_reg <= Wx_V_reg_1485;
                Wx_V_reg_1485_pp0_iter3_reg <= Wx_V_reg_1485_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                icmp_ln388_reg_1470_pp0_iter2_reg <= icmp_ln388_reg_1470_pp0_iter1_reg;
                icmp_ln388_reg_1470_pp0_iter3_reg <= icmp_ln388_reg_1470_pp0_iter2_reg;
                icmp_ln388_reg_1470_pp0_iter4_reg <= icmp_ln388_reg_1470_pp0_iter3_reg;
                icmp_ln388_reg_1470_pp0_iter5_reg <= icmp_ln388_reg_1470_pp0_iter4_reg;
                icmp_ln388_reg_1470_pp0_iter6_reg <= icmp_ln388_reg_1470_pp0_iter5_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln485) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                Wx_V_reg_1485 <= ret_V_17_fu_707_p2(23 downto 12);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    Wy_V_1_cast_reg_1454(11 downto 0) <= Wy_V_1_cast_fu_510_p1(11 downto 0);
                    Xscale64_cast11_cast_reg_1459(32 downto 0) <= Xscale64_cast11_cast_fu_514_p1(32 downto 0);
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                icmp_ln388_reg_1470 <= icmp_ln388_fu_540_p2;
                icmp_ln388_reg_1470_pp0_iter1_reg <= icmp_ln388_reg_1470;
                j_reg_1464 <= ap_sig_allocacmp_j;
                j_reg_1464_pp0_iter1_reg <= j_reg_1464;
                    zext_ln1171_cast_reg_1447(11 downto 0) <= zext_ln1171_cast_fu_506_p1(11 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln388_fu_540_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp89_read_read_fu_198_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln405_reg_1474 <= and_ln405_fu_558_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter1_p_0_0_040973_reg_470 <= ap_phi_reg_pp0_iter0_p_0_0_040973_reg_470;
                ap_phi_reg_pp0_iter1_p_Val2_20_reg_459 <= ap_phi_reg_pp0_iter0_p_Val2_20_reg_459;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter2_p_0_0_040973_reg_470 <= ap_phi_reg_pp0_iter1_p_0_0_040973_reg_470;
                ap_phi_reg_pp0_iter2_p_Val2_20_reg_459 <= ap_phi_reg_pp0_iter1_p_Val2_20_reg_459;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter3_p_0_0_040973_reg_470 <= ap_phi_reg_pp0_iter2_p_0_0_040973_reg_470;
                ap_phi_reg_pp0_iter3_p_Val2_20_reg_459 <= ap_phi_reg_pp0_iter2_p_Val2_20_reg_459;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln388_reg_1470 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_s_reg_1478 <= indexx_pre_V_fu_667_p3(31 downto 22);
            end if;
        end if;
    end process;
    zext_ln1171_cast_reg_1447(20 downto 12) <= "000000000";
    Wy_V_1_cast_reg_1454(23 downto 12) <= "000000000000";
    Xscale64_cast11_cast_reg_1459(64 downto 33) <= "00000000000000000000000000000000";
    zext_ln232_reg_1561(8) <= '0';
    zext_ln232_3_reg_1567(8) <= '0';
    zext_ln232_7_reg_1582(8) <= '0';
    zext_ln232_9_reg_1588(8) <= '0';
    zext_ln232_13_reg_1603(8) <= '0';
    zext_ln232_15_reg_1609(8) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    A0_V_1_fu_804_p4 <= p_Val2_s_fu_771_p3(15 downto 8);
    A0_V_2_fu_842_p4 <= p_Val2_s_fu_771_p3(23 downto 16);
    A0_V_fu_778_p1 <= p_Val2_s_fu_771_p3(8 - 1 downto 0);
    A1_V_1_fu_939_p4 <= p_Val2_19_fu_880_p3(15 downto 8);
    A1_V_2_fu_1000_p4 <= p_Val2_19_fu_880_p3(23 downto 16);
    A1_V_fu_887_p1 <= p_Val2_19_fu_880_p3(8 - 1 downto 0);
    B0_V_1_fu_814_p4 <= ap_phi_mux_p_Val2_18_phi_fu_434_p6(15 downto 8);
    B0_V_2_fu_852_p4 <= ap_phi_mux_p_Val2_18_phi_fu_434_p6(23 downto 16);
    B0_V_fu_782_p1 <= ap_phi_mux_p_Val2_18_phi_fu_434_p6(8 - 1 downto 0);
    B1_V_1_fu_949_p4 <= ap_phi_reg_pp0_iter4_p_Val2_20_reg_459(15 downto 8);
    B1_V_2_fu_1010_p4 <= ap_phi_reg_pp0_iter4_p_Val2_20_reg_459(23 downto 16);
    B1_V_fu_891_p1 <= ap_phi_reg_pp0_iter4_p_Val2_20_reg_459(8 - 1 downto 0);
    P4_V_1_fu_1171_p3 <= (A0_V_1_reg_1577_pp0_iter7_reg & ap_const_lv10_0);
    P4_V_2_fu_1241_p3 <= (A0_V_2_reg_1598_pp0_iter7_reg & ap_const_lv10_0);
    P4_V_fu_1101_p3 <= (A0_V_reg_1556_pp0_iter7_reg & ap_const_lv10_0);
    Wxy_V_fu_1061_p1 <= grp_fu_1330_p2;
    Wxy_V_fu_1061_p4 <= Wxy_V_fu_1061_p1(21 downto 10);
    Wy_V_1_cast_fu_510_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Wy_V_1),24));
    Xscale64_cast11_cast_fu_514_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Xscale64_cast11),65));
    add_ln388_fu_546_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_j) + unsigned(ap_const_lv10_1));
    and_ln405_fu_558_p2 <= (icmp_ln407_fu_552_p2 and icmp_ln1076_2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter8, in_mat_44_empty_n, ap_predicate_op72_read_state2, resized_mat_45_full_n, and_ln485)
    begin
                ap_block_pp0_stage0_01001 <= (((resized_mat_45_full_n = ap_const_logic_0) and (ap_const_lv1_1 = and_ln485) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)) or ((ap_predicate_op72_read_state2 = ap_const_boolean_1) and (in_mat_44_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter8, in_mat_44_empty_n, ap_predicate_op72_read_state2, resized_mat_45_full_n, and_ln485)
    begin
                ap_block_pp0_stage0_11001 <= (((resized_mat_45_full_n = ap_const_logic_0) and (ap_const_lv1_1 = and_ln485) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)) or ((ap_predicate_op72_read_state2 = ap_const_boolean_1) and (in_mat_44_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter8, in_mat_44_empty_n, ap_predicate_op72_read_state2, resized_mat_45_full_n, and_ln485)
    begin
                ap_block_pp0_stage0_subdone <= (((resized_mat_45_full_n = ap_const_logic_0) and (ap_const_lv1_1 = and_ln485) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)) or ((ap_predicate_op72_read_state2 = ap_const_boolean_1) and (in_mat_44_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage0_iter1_assign_proc : process(in_mat_44_empty_n, ap_predicate_op72_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((ap_predicate_op72_read_state2 = ap_const_boolean_1) and (in_mat_44_empty_n = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_pp0_stage0_iter8_assign_proc : process(resized_mat_45_full_n, and_ln485)
    begin
                ap_block_state9_pp0_stage0_iter8 <= ((resized_mat_45_full_n = ap_const_logic_0) and (ap_const_lv1_1 = and_ln485));
    end process;


    ap_condition_1213_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, icmp_ln388_reg_1470_pp0_iter1_reg)
    begin
                ap_condition_1213 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln388_reg_1470_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;


    ap_condition_1219_assign_proc : process(first_row_index_5_read_reg_1439, icmp_ln1064_4_read_reg_1429)
    begin
                ap_condition_1219 <= (not((first_row_index_5_read_reg_1439 = ap_const_lv32_0)) and not((first_row_index_5_read_reg_1439 = ap_const_lv32_1)) and (icmp_ln1064_4_read_reg_1429 = ap_const_lv1_0));
    end process;


    ap_condition_220_assign_proc : process(icmp_ln388_reg_1470_pp0_iter2_reg, first_row_index_5_read_reg_1439)
    begin
                ap_condition_220 <= (not((first_row_index_5_read_reg_1439 = ap_const_lv32_0)) and not((first_row_index_5_read_reg_1439 = ap_const_lv32_1)) and (icmp_ln388_reg_1470_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_condition_326_assign_proc : process(first_row_index_5_read_reg_1439, icmp_ln1064_4_read_reg_1429, icmp_ln388_reg_1470_pp0_iter1_reg)
    begin
                ap_condition_326 <= ((icmp_ln388_reg_1470_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln1064_4_read_reg_1429 = ap_const_lv1_0) and (first_row_index_5_read_reg_1439 = ap_const_lv32_1));
    end process;


    ap_condition_338_assign_proc : process(first_row_index_5_read_reg_1439, icmp_ln1064_4_read_reg_1429, icmp_ln388_reg_1470_pp0_iter1_reg)
    begin
                ap_condition_338 <= ((icmp_ln388_reg_1470_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln1064_4_read_reg_1429 = ap_const_lv1_0) and (first_row_index_5_read_reg_1439 = ap_const_lv32_0));
    end process;


    ap_condition_350_assign_proc : process(first_row_index_5_read_reg_1439, icmp_ln388_reg_1470_pp0_iter1_reg)
    begin
                ap_condition_350 <= (not((first_row_index_5_read_reg_1439 = ap_const_lv32_0)) and not((first_row_index_5_read_reg_1439 = ap_const_lv32_1)) and (icmp_ln388_reg_1470_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_condition_351_assign_proc : process(first_row_index_5_read_reg_1439, icmp_ln1064_4_read_reg_1429, icmp_ln388_reg_1470_pp0_iter1_reg)
    begin
                ap_condition_351 <= (not((first_row_index_5_read_reg_1439 = ap_const_lv32_0)) and not((first_row_index_5_read_reg_1439 = ap_const_lv32_1)) and (icmp_ln388_reg_1470_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln1064_4_read_reg_1429 = ap_const_lv1_0));
    end process;


    ap_condition_470_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_470 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_521_assign_proc : process(first_row_index_5_read_reg_1439, ap_phi_mux_flag_write_phi_fu_420_p6)
    begin
                ap_condition_521 <= (not((first_row_index_5_read_reg_1439 = ap_const_lv32_0)) and not((first_row_index_5_read_reg_1439 = ap_const_lv32_1)) and (ap_phi_mux_flag_write_phi_fu_420_p6 = ap_const_lv1_1));
    end process;


    ap_condition_65_assign_proc : process(icmp_ln388_reg_1470, and_ln405_reg_1474, cmp89)
    begin
                ap_condition_65 <= ((ap_const_lv1_1 = and_ln405_reg_1474) and (cmp89 = ap_const_lv1_1) and (icmp_ln388_reg_1470 = ap_const_lv1_0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln388_fu_540_p2)
    begin
        if (((icmp_ln388_fu_540_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter7_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;
    ap_phi_mux_flag_write_phi_fu_420_p6 <= ap_phi_reg_pp0_iter2_flag_write_reg_415;

    ap_phi_mux_p_0_0_041069_phi_fu_448_p6_assign_proc : process(line_buffer_V_q1, line_buffer_V_1_q1, icmp_ln388_reg_1470_pp0_iter2_reg, first_row_index_5_read_reg_1439, line_buffer_V_2_q1, ap_phi_reg_pp0_iter3_p_0_0_041069_reg_445)
    begin
        if ((icmp_ln388_reg_1470_pp0_iter2_reg = ap_const_lv1_0)) then
            if ((first_row_index_5_read_reg_1439 = ap_const_lv32_1)) then 
                ap_phi_mux_p_0_0_041069_phi_fu_448_p6 <= line_buffer_V_1_q1;
            elsif ((not((first_row_index_5_read_reg_1439 = ap_const_lv32_0)) and not((first_row_index_5_read_reg_1439 = ap_const_lv32_1)))) then 
                ap_phi_mux_p_0_0_041069_phi_fu_448_p6 <= line_buffer_V_2_q1;
            elsif ((first_row_index_5_read_reg_1439 = ap_const_lv32_0)) then 
                ap_phi_mux_p_0_0_041069_phi_fu_448_p6 <= line_buffer_V_q1;
            else 
                ap_phi_mux_p_0_0_041069_phi_fu_448_p6 <= ap_phi_reg_pp0_iter3_p_0_0_041069_reg_445;
            end if;
        else 
            ap_phi_mux_p_0_0_041069_phi_fu_448_p6 <= ap_phi_reg_pp0_iter3_p_0_0_041069_reg_445;
        end if; 
    end process;


    ap_phi_mux_p_Val2_18_phi_fu_434_p6_assign_proc : process(line_buffer_V_q1, line_buffer_V_1_q1, icmp_ln388_reg_1470_pp0_iter2_reg, first_row_index_5_read_reg_1439, line_buffer_V_2_q1, ap_phi_reg_pp0_iter3_p_Val2_18_reg_431)
    begin
        if ((icmp_ln388_reg_1470_pp0_iter2_reg = ap_const_lv1_0)) then
            if ((first_row_index_5_read_reg_1439 = ap_const_lv32_1)) then 
                ap_phi_mux_p_Val2_18_phi_fu_434_p6 <= line_buffer_V_2_q1;
            elsif ((not((first_row_index_5_read_reg_1439 = ap_const_lv32_0)) and not((first_row_index_5_read_reg_1439 = ap_const_lv32_1)))) then 
                ap_phi_mux_p_Val2_18_phi_fu_434_p6 <= line_buffer_V_q1;
            elsif ((first_row_index_5_read_reg_1439 = ap_const_lv32_0)) then 
                ap_phi_mux_p_Val2_18_phi_fu_434_p6 <= line_buffer_V_1_q1;
            else 
                ap_phi_mux_p_Val2_18_phi_fu_434_p6 <= ap_phi_reg_pp0_iter3_p_Val2_18_reg_431;
            end if;
        else 
            ap_phi_mux_p_Val2_18_phi_fu_434_p6 <= ap_phi_reg_pp0_iter3_p_Val2_18_reg_431;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_flag_write_reg_415 <= "X";
    ap_phi_reg_pp0_iter0_p_0_0_040973_reg_470 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_p_Val2_20_reg_459 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter3_p_0_0_041069_reg_445 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter3_p_Val2_18_reg_431 <= "XXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op72_read_state2_assign_proc : process(icmp_ln388_reg_1470, and_ln405_reg_1474, cmp89)
    begin
                ap_predicate_op72_read_state2 <= ((ap_const_lv1_1 = and_ln405_reg_1474) and (cmp89 = ap_const_lv1_1) and (icmp_ln388_reg_1470 = ap_const_lv1_0));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_j_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, tmp_fu_166)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_j <= ap_const_lv10_0;
        else 
            ap_sig_allocacmp_j <= tmp_fu_166;
        end if; 
    end process;

    cmp89_read_read_fu_198_p2 <= cmp89;
    first_row_index_5_read_reg_1439 <= first_row_index_5;

    grp_fu_1330_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1330_ce <= ap_const_logic_1;
        else 
            grp_fu_1330_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1330_p0 <= grp_fu_1330_p00(12 - 1 downto 0);
    grp_fu_1330_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Wx_V_reg_1485),24));
    grp_fu_1330_p1 <= Wy_V_1_cast_reg_1454(12 - 1 downto 0);

    grp_fu_1336_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1336_ce <= ap_const_logic_1;
        else 
            grp_fu_1336_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1336_p0 <= zext_ln1171_cast_reg_1447(12 - 1 downto 0);

    grp_fu_1342_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1342_ce <= ap_const_logic_1;
        else 
            grp_fu_1342_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1342_p0 <= zext_ln1171_cast_reg_1447(12 - 1 downto 0);

    grp_fu_1348_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1348_ce <= ap_const_logic_1;
        else 
            grp_fu_1348_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1348_p0 <= zext_ln1171_cast_reg_1447(12 - 1 downto 0);

    grp_fu_1354_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1354_ce <= ap_const_logic_1;
        else 
            grp_fu_1354_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1354_p0 <= zext_ln1171_1_fu_936_p1(12 - 1 downto 0);

    grp_fu_1363_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1363_ce <= ap_const_logic_1;
        else 
            grp_fu_1363_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1363_p0 <= zext_ln1171_1_fu_936_p1(12 - 1 downto 0);

    grp_fu_1372_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1372_ce <= ap_const_logic_1;
        else 
            grp_fu_1372_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1372_p0 <= zext_ln1171_1_fu_936_p1(12 - 1 downto 0);

    grp_fu_1381_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1381_ce <= ap_const_logic_1;
        else 
            grp_fu_1381_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1381_p0 <= zext_ln717_1_fu_1070_p1(12 - 1 downto 0);

    grp_fu_1390_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1390_ce <= ap_const_logic_1;
        else 
            grp_fu_1390_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1390_p0 <= zext_ln717_1_fu_1070_p1(12 - 1 downto 0);

    grp_fu_1399_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1399_ce <= ap_const_logic_1;
        else 
            grp_fu_1399_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1399_p0 <= zext_ln717_1_fu_1070_p1(12 - 1 downto 0);
    icmp_ln1064_4_read_reg_1429 <= icmp_ln1064_4;
    icmp_ln1547_fu_639_p2 <= "1" when (signed(trunc_ln2_fu_611_p4) > signed(ap_const_lv34_9FC00000)) else "0";
    icmp_ln388_fu_540_p2 <= "1" when (ap_sig_allocacmp_j = ap_const_lv10_3E8) else "0";
    icmp_ln407_fu_552_p2 <= "1" when (unsigned(ap_sig_allocacmp_j) < unsigned(ap_const_lv10_280)) else "0";
    icmp_ln902_1_fu_1213_p2 <= "1" when (trunc_ln902_1_fu_1209_p1 = ap_const_lv10_0) else "0";
    icmp_ln902_2_fu_1283_p2 <= "1" when (trunc_ln902_2_fu_1279_p1 = ap_const_lv10_0) else "0";
    icmp_ln902_fu_1143_p2 <= "1" when (trunc_ln902_fu_1139_p1 = ap_const_lv10_0) else "0";
    idx_nxt_fu_744_p2 <= std_logic_vector(unsigned(tmp_s_reg_1478) + unsigned(zext_ln427_fu_740_p1));

    in_mat_44_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, in_mat_44_empty_n, ap_predicate_op72_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op72_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_mat_44_blk_n <= in_mat_44_empty_n;
        else 
            in_mat_44_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_mat_44_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op72_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op72_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_mat_44_read <= ap_const_logic_1;
        else 
            in_mat_44_read <= ap_const_logic_0;
        end if; 
    end process;

    indexx_pre_V_fu_667_p3 <= 
        select_ln255_fu_653_p3 when (or_ln255_fu_661_p2(0) = '1') else 
        trunc_ln3_fu_621_p4;
    indexy_V_1_out <= indexy_V_1_fu_162;

    indexy_V_1_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln388_reg_1470_pp0_iter6_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln388_reg_1470_pp0_iter6_reg = ap_const_lv1_1))) then 
            indexy_V_1_out_ap_vld <= ap_const_logic_1;
        else 
            indexy_V_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    lhs_fu_579_p3 <= (j_reg_1464 & ap_const_lv22_0);
    line_buffer_V_1_addr_1_gep_fu_362_p3 <= zext_ln430_fu_758_p1(10 - 1 downto 0);
    line_buffer_V_1_addr_gep_fu_354_p3 <= zext_ln429_fu_749_p1(10 - 1 downto 0);

    line_buffer_V_1_address0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, first_row_index_5_read_reg_1439, icmp_ln388_reg_1470_pp0_iter1_reg, line_buffer_V_1_addr_1_gep_fu_362_p3, zext_ln430_fu_758_p1, zext_ln388_fu_729_p1, ap_condition_326, ap_condition_521)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((ap_const_boolean_1 = ap_condition_521)) then 
                line_buffer_V_1_address0 <= zext_ln388_fu_729_p1(10 - 1 downto 0);
            elsif (((icmp_ln388_reg_1470_pp0_iter1_reg = ap_const_lv1_0) and (first_row_index_5_read_reg_1439 = ap_const_lv32_0))) then 
                line_buffer_V_1_address0 <= line_buffer_V_1_addr_1_gep_fu_362_p3;
            elsif ((ap_const_boolean_1 = ap_condition_326)) then 
                line_buffer_V_1_address0 <= zext_ln430_fu_758_p1(10 - 1 downto 0);
            else 
                line_buffer_V_1_address0 <= "XXXXXXXXXX";
            end if;
        else 
            line_buffer_V_1_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    line_buffer_V_1_address1_assign_proc : process(first_row_index_5_read_reg_1439, icmp_ln1064_4_read_reg_1429, line_buffer_V_1_addr_gep_fu_354_p3, zext_ln429_fu_749_p1, ap_condition_1213)
    begin
        if ((ap_const_boolean_1 = ap_condition_1213)) then
            if ((first_row_index_5_read_reg_1439 = ap_const_lv32_0)) then 
                line_buffer_V_1_address1 <= line_buffer_V_1_addr_gep_fu_354_p3;
            elsif (((icmp_ln1064_4_read_reg_1429 = ap_const_lv1_0) and (first_row_index_5_read_reg_1439 = ap_const_lv32_1))) then 
                line_buffer_V_1_address1 <= zext_ln429_fu_749_p1(10 - 1 downto 0);
            else 
                line_buffer_V_1_address1 <= "XXXXXXXXXX";
            end if;
        else 
            line_buffer_V_1_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    line_buffer_V_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, first_row_index_5_read_reg_1439, icmp_ln1064_4_read_reg_1429, icmp_ln388_reg_1470_pp0_iter1_reg, ap_phi_mux_flag_write_phi_fu_420_p6)
    begin
        if (((not((first_row_index_5_read_reg_1439 = ap_const_lv32_0)) and not((first_row_index_5_read_reg_1439 = ap_const_lv32_1)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_flag_write_phi_fu_420_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln388_reg_1470_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (first_row_index_5_read_reg_1439 = ap_const_lv32_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln388_reg_1470_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1064_4_read_reg_1429 = ap_const_lv1_0) and (first_row_index_5_read_reg_1439 = ap_const_lv32_1)))) then 
            line_buffer_V_1_ce0 <= ap_const_logic_1;
        else 
            line_buffer_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_1_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, first_row_index_5_read_reg_1439, icmp_ln1064_4_read_reg_1429, icmp_ln388_reg_1470_pp0_iter1_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln388_reg_1470_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (first_row_index_5_read_reg_1439 = ap_const_lv32_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln388_reg_1470_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1064_4_read_reg_1429 = ap_const_lv1_0) and (first_row_index_5_read_reg_1439 = ap_const_lv32_1)))) then 
            line_buffer_V_1_ce1 <= ap_const_logic_1;
        else 
            line_buffer_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_1_d0 <= read_pixel_1_out_i;

    line_buffer_V_1_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, first_row_index_5_read_reg_1439, ap_phi_mux_flag_write_phi_fu_420_p6)
    begin
        if ((not((first_row_index_5_read_reg_1439 = ap_const_lv32_0)) and not((first_row_index_5_read_reg_1439 = ap_const_lv32_1)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_flag_write_phi_fu_420_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            line_buffer_V_1_we0 <= ap_const_logic_1;
        else 
            line_buffer_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_2_addr_1_gep_fu_384_p3 <= zext_ln430_fu_758_p1(10 - 1 downto 0);
    line_buffer_V_2_addr_gep_fu_377_p3 <= zext_ln429_fu_749_p1(10 - 1 downto 0);

    line_buffer_V_2_address0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, first_row_index_5_read_reg_1439, icmp_ln388_reg_1470_pp0_iter1_reg, line_buffer_V_2_addr_1_gep_fu_384_p3, ap_phi_mux_flag_write_phi_fu_420_p6, zext_ln430_fu_758_p1, zext_ln388_fu_729_p1, ap_condition_351)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((ap_const_boolean_1 = ap_condition_351)) then 
                line_buffer_V_2_address0 <= line_buffer_V_2_addr_1_gep_fu_384_p3;
            elsif (((ap_phi_mux_flag_write_phi_fu_420_p6 = ap_const_lv1_1) and (first_row_index_5_read_reg_1439 = ap_const_lv32_0))) then 
                line_buffer_V_2_address0 <= zext_ln388_fu_729_p1(10 - 1 downto 0);
            elsif (((icmp_ln388_reg_1470_pp0_iter1_reg = ap_const_lv1_0) and (first_row_index_5_read_reg_1439 = ap_const_lv32_1))) then 
                line_buffer_V_2_address0 <= zext_ln430_fu_758_p1(10 - 1 downto 0);
            else 
                line_buffer_V_2_address0 <= "XXXXXXXXXX";
            end if;
        else 
            line_buffer_V_2_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    line_buffer_V_2_address1_assign_proc : process(first_row_index_5_read_reg_1439, line_buffer_V_2_addr_gep_fu_377_p3, zext_ln429_fu_749_p1, ap_condition_1213, ap_condition_1219)
    begin
        if ((ap_const_boolean_1 = ap_condition_1213)) then
            if ((ap_const_boolean_1 = ap_condition_1219)) then 
                line_buffer_V_2_address1 <= line_buffer_V_2_addr_gep_fu_377_p3;
            elsif ((first_row_index_5_read_reg_1439 = ap_const_lv32_1)) then 
                line_buffer_V_2_address1 <= zext_ln429_fu_749_p1(10 - 1 downto 0);
            else 
                line_buffer_V_2_address1 <= "XXXXXXXXXX";
            end if;
        else 
            line_buffer_V_2_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    line_buffer_V_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, first_row_index_5_read_reg_1439, icmp_ln1064_4_read_reg_1429, icmp_ln388_reg_1470_pp0_iter1_reg, ap_phi_mux_flag_write_phi_fu_420_p6)
    begin
        if (((not((first_row_index_5_read_reg_1439 = ap_const_lv32_0)) and not((first_row_index_5_read_reg_1439 = ap_const_lv32_1)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln388_reg_1470_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1064_4_read_reg_1429 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_flag_write_phi_fu_420_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (first_row_index_5_read_reg_1439 = ap_const_lv32_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln388_reg_1470_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (first_row_index_5_read_reg_1439 = ap_const_lv32_1)))) then 
            line_buffer_V_2_ce0 <= ap_const_logic_1;
        else 
            line_buffer_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_2_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, first_row_index_5_read_reg_1439, icmp_ln1064_4_read_reg_1429, icmp_ln388_reg_1470_pp0_iter1_reg)
    begin
        if (((not((first_row_index_5_read_reg_1439 = ap_const_lv32_0)) and not((first_row_index_5_read_reg_1439 = ap_const_lv32_1)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln388_reg_1470_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1064_4_read_reg_1429 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln388_reg_1470_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (first_row_index_5_read_reg_1439 = ap_const_lv32_1)))) then 
            line_buffer_V_2_ce1 <= ap_const_logic_1;
        else 
            line_buffer_V_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_2_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, first_row_index_5_read_reg_1439, ap_phi_mux_flag_write_phi_fu_420_p6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_flag_write_phi_fu_420_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (first_row_index_5_read_reg_1439 = ap_const_lv32_0))) then 
            line_buffer_V_2_we0 <= ap_const_logic_1;
        else 
            line_buffer_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_addr_1_gep_fu_399_p3 <= zext_ln430_fu_758_p1(10 - 1 downto 0);
    line_buffer_V_addr_gep_fu_391_p3 <= zext_ln429_fu_749_p1(10 - 1 downto 0);

    line_buffer_V_address0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, first_row_index_5_read_reg_1439, line_buffer_V_addr_1_gep_fu_399_p3, ap_phi_mux_flag_write_phi_fu_420_p6, zext_ln430_fu_758_p1, zext_ln388_fu_729_p1, ap_condition_338, ap_condition_350)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((ap_const_boolean_1 = ap_condition_350)) then 
                line_buffer_V_address0 <= line_buffer_V_addr_1_gep_fu_399_p3;
            elsif ((ap_const_boolean_1 = ap_condition_338)) then 
                line_buffer_V_address0 <= zext_ln430_fu_758_p1(10 - 1 downto 0);
            elsif (((ap_phi_mux_flag_write_phi_fu_420_p6 = ap_const_lv1_1) and (first_row_index_5_read_reg_1439 = ap_const_lv32_1))) then 
                line_buffer_V_address0 <= zext_ln388_fu_729_p1(10 - 1 downto 0);
            else 
                line_buffer_V_address0 <= "XXXXXXXXXX";
            end if;
        else 
            line_buffer_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    line_buffer_V_address1_assign_proc : process(first_row_index_5_read_reg_1439, icmp_ln1064_4_read_reg_1429, line_buffer_V_addr_gep_fu_391_p3, zext_ln429_fu_749_p1, ap_condition_1213)
    begin
        if ((ap_const_boolean_1 = ap_condition_1213)) then
            if ((not((first_row_index_5_read_reg_1439 = ap_const_lv32_0)) and not((first_row_index_5_read_reg_1439 = ap_const_lv32_1)))) then 
                line_buffer_V_address1 <= line_buffer_V_addr_gep_fu_391_p3;
            elsif (((icmp_ln1064_4_read_reg_1429 = ap_const_lv1_0) and (first_row_index_5_read_reg_1439 = ap_const_lv32_0))) then 
                line_buffer_V_address1 <= zext_ln429_fu_749_p1(10 - 1 downto 0);
            else 
                line_buffer_V_address1 <= "XXXXXXXXXX";
            end if;
        else 
            line_buffer_V_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    line_buffer_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, first_row_index_5_read_reg_1439, icmp_ln1064_4_read_reg_1429, icmp_ln388_reg_1470_pp0_iter1_reg, ap_phi_mux_flag_write_phi_fu_420_p6)
    begin
        if (((not((first_row_index_5_read_reg_1439 = ap_const_lv32_0)) and not((first_row_index_5_read_reg_1439 = ap_const_lv32_1)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln388_reg_1470_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_flag_write_phi_fu_420_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (first_row_index_5_read_reg_1439 = ap_const_lv32_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln388_reg_1470_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1064_4_read_reg_1429 = ap_const_lv1_0) and (first_row_index_5_read_reg_1439 = ap_const_lv32_0)))) then 
            line_buffer_V_ce0 <= ap_const_logic_1;
        else 
            line_buffer_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, first_row_index_5_read_reg_1439, icmp_ln1064_4_read_reg_1429, icmp_ln388_reg_1470_pp0_iter1_reg)
    begin
        if (((not((first_row_index_5_read_reg_1439 = ap_const_lv32_0)) and not((first_row_index_5_read_reg_1439 = ap_const_lv32_1)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln388_reg_1470_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln388_reg_1470_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1064_4_read_reg_1429 = ap_const_lv1_0) and (first_row_index_5_read_reg_1439 = ap_const_lv32_0)))) then 
            line_buffer_V_ce1 <= ap_const_logic_1;
        else 
            line_buffer_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_d0 <= read_pixel_1_out_i;

    line_buffer_V_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, first_row_index_5_read_reg_1439, ap_phi_mux_flag_write_phi_fu_420_p6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_flag_write_phi_fu_420_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (first_row_index_5_read_reg_1439 = ap_const_lv32_1))) then 
            line_buffer_V_we0 <= ap_const_logic_1;
        else 
            line_buffer_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    nextYScale_V_1_out <= nextYScale_V_1_fu_158;

    nextYScale_V_1_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln388_reg_1470_pp0_iter6_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln388_reg_1470_pp0_iter6_reg = ap_const_lv1_1))) then 
            nextYScale_V_1_out_ap_vld <= ap_const_logic_1;
        else 
            nextYScale_V_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    not_cmp_i_i173_fu_735_p2 <= "0" when (tmp_s_reg_1478 = ap_const_lv10_27F) else "1";
    or_ln255_fu_661_p2 <= (tmp_29_fu_631_p3 or icmp_ln1547_fu_639_p2);
    p_Result_29_fu_1201_p3 <= ret_V_23_fu_1185_p2(23 downto 23);
    p_Result_30_fu_1271_p3 <= ret_V_27_fu_1255_p2(23 downto 23);
    p_Result_s_fu_1131_p3 <= ret_V_19_fu_1115_p2(23 downto 23);
    p_Val2_19_fu_880_p3 <= 
        ap_phi_reg_pp0_iter4_p_Val2_20_reg_459 when (icmp_ln1064_4(0) = '1') else 
        ap_phi_reg_pp0_iter4_p_0_0_040973_reg_470;
    p_Val2_s_fu_771_p3 <= 
        ap_phi_mux_p_Val2_18_phi_fu_434_p6 when (icmp_ln1064_4(0) = '1') else 
        ap_phi_mux_p_0_0_041069_phi_fu_448_p6;
    r_V_2_fu_596_p0 <= Xscale64_cast11_cast_reg_1459(33 - 1 downto 0);
    r_V_2_fu_596_p1 <= r_V_2_fu_596_p10(32 - 1 downto 0);
    r_V_2_fu_596_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_30_fu_586_p2),65));

    read_pixel_1_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, in_mat_44_dout, icmp_ln388_reg_1470, and_ln405_reg_1474, cmp89, read_pixel_1_out_i, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_lv1_1 = and_ln405_reg_1474) and (cmp89 = ap_const_lv1_1) and (icmp_ln388_reg_1470 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            read_pixel_1_out_o <= in_mat_44_dout;
        else 
            read_pixel_1_out_o <= read_pixel_1_out_i;
        end if; 
    end process;


    read_pixel_1_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln388_reg_1470, and_ln405_reg_1474, cmp89, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln405_reg_1474) and (cmp89 = ap_const_lv1_1) and (icmp_ln388_reg_1470 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            read_pixel_1_out_o_ap_vld <= ap_const_logic_1;
        else 
            read_pixel_1_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    resized_mat_45_blk_n_assign_proc : process(ap_enable_reg_pp0_iter8, resized_mat_45_full_n, and_ln485, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_lv1_1 = and_ln485) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            resized_mat_45_blk_n <= resized_mat_45_full_n;
        else 
            resized_mat_45_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    resized_mat_45_din <= ((ret_V_36_fu_1303_p3 & ret_V_34_fu_1233_p3) & ret_V_32_fu_1163_p3);

    resized_mat_45_write_assign_proc : process(ap_enable_reg_pp0_iter8, and_ln485, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln485) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            resized_mat_45_write <= ap_const_logic_1;
        else 
            resized_mat_45_write <= ap_const_logic_0;
        end if; 
    end process;

    ret_18_fu_921_p2 <= std_logic_vector(unsigned(zext_ln232_5_fu_913_p1) - unsigned(zext_ln232_6_fu_917_p1));
    ret_19_fu_794_p2 <= std_logic_vector(unsigned(zext_ln232_3_fu_790_p1) - unsigned(zext_ln232_fu_786_p1));
    ret_20_fu_927_p2 <= std_logic_vector(unsigned(zext_ln232_4_fu_904_p1) - unsigned(zext_ln232_reg_1561));
    ret_23_fu_832_p2 <= std_logic_vector(unsigned(zext_ln232_9_fu_828_p1) - unsigned(zext_ln232_7_fu_824_p1));
    ret_24_fu_991_p2 <= std_logic_vector(unsigned(zext_ln232_10_fu_968_p1) - unsigned(zext_ln232_7_reg_1582));
    ret_27_fu_1046_p2 <= std_logic_vector(unsigned(zext_ln232_17_fu_1038_p1) - unsigned(zext_ln232_18_fu_1042_p1));
    ret_28_fu_870_p2 <= std_logic_vector(unsigned(zext_ln232_15_fu_866_p1) - unsigned(zext_ln232_13_fu_862_p1));
    ret_29_fu_1052_p2 <= std_logic_vector(unsigned(zext_ln232_16_fu_1029_p1) - unsigned(zext_ln232_13_reg_1603));
    ret_30_fu_899_p2 <= std_logic_vector(unsigned(zext_ln232_2_fu_895_p1) + unsigned(zext_ln232_reg_1561));
    ret_31_fu_908_p2 <= std_logic_vector(unsigned(zext_ln232_4_fu_904_p1) + unsigned(zext_ln232_3_reg_1567));
    ret_32_fu_963_p2 <= std_logic_vector(unsigned(zext_ln232_8_fu_959_p1) + unsigned(zext_ln232_7_reg_1582));
    ret_33_fu_972_p2 <= std_logic_vector(unsigned(zext_ln232_10_fu_968_p1) + unsigned(zext_ln232_9_reg_1588));
    ret_34_fu_1024_p2 <= std_logic_vector(unsigned(zext_ln232_14_fu_1020_p1) + unsigned(zext_ln232_13_reg_1603));
    ret_35_fu_1033_p2 <= std_logic_vector(unsigned(zext_ln232_16_fu_1029_p1) + unsigned(zext_ln232_15_reg_1609));
    ret_V_17_fu_707_p2 <= std_logic_vector(unsigned(trunc_ln712_fu_703_p1) - unsigned(rhs_fu_695_p3));
    ret_V_19_fu_1115_p2 <= std_logic_vector(signed(sext_ln1245_3_fu_1108_p1) + signed(zext_ln1245_fu_1111_p1));
    ret_V_20_fu_1149_p2 <= std_logic_vector(unsigned(trunc_ln_fu_1121_p4) + unsigned(ap_const_lv8_1));
    ret_V_23_fu_1185_p2 <= std_logic_vector(signed(sext_ln1245_8_fu_1178_p1) + signed(zext_ln1245_1_fu_1181_p1));
    ret_V_24_fu_1219_p2 <= std_logic_vector(unsigned(trunc_ln882_1_fu_1191_p4) + unsigned(ap_const_lv8_1));
    ret_V_27_fu_1255_p2 <= std_logic_vector(signed(sext_ln1245_13_fu_1248_p1) + signed(zext_ln1245_2_fu_1251_p1));
    ret_V_28_fu_1289_p2 <= std_logic_vector(unsigned(trunc_ln882_2_fu_1261_p4) + unsigned(ap_const_lv8_1));
    ret_V_30_fu_586_p2 <= (lhs_fu_579_p3 or ap_const_lv32_200000);
    ret_V_32_fu_1163_p3 <= 
        select_ln901_fu_1155_p3 when (p_Result_s_fu_1131_p3(0) = '1') else 
        trunc_ln_fu_1121_p4;
    ret_V_34_fu_1233_p3 <= 
        select_ln901_2_fu_1225_p3 when (p_Result_29_fu_1201_p3(0) = '1') else 
        trunc_ln882_1_fu_1191_p4;
    ret_V_36_fu_1303_p3 <= 
        select_ln901_3_fu_1295_p3 when (p_Result_30_fu_1271_p3(0) = '1') else 
        trunc_ln882_2_fu_1261_p4;
    ret_V_fu_605_p2 <= std_logic_vector(unsigned(zext_ln1168_1_fu_601_p1) + unsigned(ap_const_lv66_3FFE0000000000000));
    ret_fu_985_p2 <= std_logic_vector(unsigned(zext_ln232_11_fu_977_p1) - unsigned(zext_ln232_12_fu_981_p1));
    rhs_fu_695_p3 <= (tmp_10_fu_685_p4 & ap_const_lv22_0);
    select_ln255_fu_653_p3 <= 
        ap_const_lv32_0 when (tmp_30_fu_645_p3(0) = '1') else 
        ap_const_lv32_9FC00000;
    select_ln901_2_fu_1225_p3 <= 
        trunc_ln882_1_fu_1191_p4 when (icmp_ln902_1_fu_1213_p2(0) = '1') else 
        ret_V_24_fu_1219_p2;
    select_ln901_3_fu_1295_p3 <= 
        trunc_ln882_2_fu_1261_p4 when (icmp_ln902_2_fu_1283_p2(0) = '1') else 
        ret_V_28_fu_1289_p2;
    select_ln901_fu_1155_p3 <= 
        trunc_ln_fu_1121_p4 when (icmp_ln902_fu_1143_p2(0) = '1') else 
        ret_V_20_fu_1149_p2;
        sext_ln1245_13_fu_1248_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1399_p3),24));

        sext_ln1245_3_fu_1108_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1381_p3),24));

        sext_ln1245_8_fu_1178_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1390_p3),24));

    tmp_10_fu_685_p4 <= indexx_pre_V_fu_667_p3(23 downto 22);
    tmp_29_fu_631_p3 <= ret_V_fu_605_p2(65 downto 65);
    tmp_30_fu_645_p3 <= ret_V_fu_605_p2(65 downto 65);
    trunc_ln2_fu_611_p4 <= ret_V_fu_605_p2(65 downto 32);
    trunc_ln3_fu_621_p4 <= ret_V_fu_605_p2(63 downto 32);
    trunc_ln712_fu_703_p1 <= indexx_pre_V_fu_667_p3(24 - 1 downto 0);
    trunc_ln882_1_fu_1191_p4 <= ret_V_23_fu_1185_p2(17 downto 10);
    trunc_ln882_2_fu_1261_p4 <= ret_V_27_fu_1255_p2(17 downto 10);
    trunc_ln902_1_fu_1209_p1 <= ret_V_23_fu_1185_p2(10 - 1 downto 0);
    trunc_ln902_2_fu_1279_p1 <= ret_V_27_fu_1255_p2(10 - 1 downto 0);
    trunc_ln902_fu_1139_p1 <= ret_V_19_fu_1115_p2(10 - 1 downto 0);
    trunc_ln_fu_1121_p4 <= ret_V_19_fu_1115_p2(17 downto 10);
    zext_ln1168_1_fu_601_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_2_fu_596_p2),66));
    zext_ln1171_1_fu_936_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Wx_V_reg_1485_pp0_iter3_reg),21));
    zext_ln1171_cast_fu_506_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln1171),21));
    zext_ln1245_1_fu_1181_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(P4_V_1_fu_1171_p3),24));
    zext_ln1245_2_fu_1251_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(P4_V_2_fu_1241_p3),24));
    zext_ln1245_fu_1111_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(P4_V_fu_1101_p3),24));
    zext_ln232_10_fu_968_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A1_V_1_fu_939_p4),9));
    zext_ln232_11_fu_977_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_32_fu_963_p2),10));
    zext_ln232_12_fu_981_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_33_fu_972_p2),10));
    zext_ln232_13_fu_862_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A0_V_2_fu_842_p4),9));
    zext_ln232_14_fu_1020_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B1_V_2_fu_1010_p4),9));
    zext_ln232_15_fu_866_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B0_V_2_fu_852_p4),9));
    zext_ln232_16_fu_1029_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A1_V_2_fu_1000_p4),9));
    zext_ln232_17_fu_1038_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_34_fu_1024_p2),10));
    zext_ln232_18_fu_1042_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_35_fu_1033_p2),10));
    zext_ln232_2_fu_895_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B1_V_fu_891_p1),9));
    zext_ln232_3_fu_790_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B0_V_fu_782_p1),9));
    zext_ln232_4_fu_904_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A1_V_fu_887_p1),9));
    zext_ln232_5_fu_913_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_30_fu_899_p2),10));
    zext_ln232_6_fu_917_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_31_fu_908_p2),10));
    zext_ln232_7_fu_824_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A0_V_1_fu_804_p4),9));
    zext_ln232_8_fu_959_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B1_V_1_fu_949_p4),9));
    zext_ln232_9_fu_828_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B0_V_1_fu_814_p4),9));
    zext_ln232_fu_786_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A0_V_fu_778_p1),9));
    zext_ln388_fu_729_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_reg_1464_pp0_iter1_reg),64));
    zext_ln399_cast_fu_518_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln399),17));
    zext_ln427_fu_740_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(not_cmp_i_i173_fu_735_p2),10));
    zext_ln429_fu_749_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_reg_1478),64));
    zext_ln430_fu_758_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(idx_nxt_fu_744_p2),64));
    zext_ln717_1_fu_1070_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Wxy_V_fu_1061_p4),22));
end behav;
