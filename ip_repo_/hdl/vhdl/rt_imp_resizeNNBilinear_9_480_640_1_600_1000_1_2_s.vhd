-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity rt_imp_resizeNNBilinear_9_480_640_1_600_1000_1_2_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_mat_44_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    in_mat_44_empty_n : IN STD_LOGIC;
    in_mat_44_read : OUT STD_LOGIC;
    resized_mat_45_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    resized_mat_45_full_n : IN STD_LOGIC;
    resized_mat_45_write : OUT STD_LOGIC );
end;


architecture behav of rt_imp_resizeNNBilinear_9_480_640_1_600_1000_1_2_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv42_28000000000 : STD_LOGIC_VECTOR (41 downto 0) := "101000000000000000000000000000000000000000";
    constant ap_const_lv10_3E8 : STD_LOGIC_VECTOR (9 downto 0) := "1111101000";
    constant ap_const_lv42_1E000000000 : STD_LOGIC_VECTOR (41 downto 0) := "011110000000000000000000000000000000000000";
    constant ap_const_lv10_258 : STD_LOGIC_VECTOR (9 downto 0) := "1001011000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv42_200000 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000001000000000000000000000";
    constant ap_const_lv74_3FFFFE0000000000000 : STD_LOGIC_VECTOR (73 downto 0) := "11111111111111111111100000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv42_77C00000 : STD_LOGIC_VECTOR (41 downto 0) := "000000000001110111110000000000000000000000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv31_77C00000 : STD_LOGIC_VECTOR (30 downto 0) := "1110111110000000000000000000000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_1E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111100000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_258 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001011000";
    constant ap_const_lv32_FFFFFFFE : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_xfUDivResize_fu_178_ap_return : STD_LOGIC_VECTOR (32 downto 0);
    signal Xscale64_reg_806 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_xfUDivResize_fu_186_ap_return : STD_LOGIC_VECTOR (32 downto 0);
    signal Yscale64_reg_811 : STD_LOGIC_VECTOR (32 downto 0);
    signal rhs_1_reg_816 : STD_LOGIC_VECTOR (22 downto 0);
    signal conv_i_i_i322_i_cast_reg_821 : STD_LOGIC_VECTOR (21 downto 0);
    signal inscale_V_cast_fu_269_p1 : STD_LOGIC_VECTOR (73 downto 0);
    signal inscale_V_cast_reg_826 : STD_LOGIC_VECTOR (73 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal rhs_fu_272_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal rhs_reg_831 : STD_LOGIC_VECTOR (42 downto 0);
    signal sub_ln902_fu_275_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln902_reg_836 : STD_LOGIC_VECTOR (21 downto 0);
    signal indexy_V_3_reg_847 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal icmp_ln381_fu_283_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Wy_V_reg_853 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_39_fu_499_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_39_reg_859 : STD_LOGIC_VECTOR (16 downto 0);
    signal cmp89_fu_527_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp89_reg_877 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal op2_assign_fu_534_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal op2_assign_reg_885 : STD_LOGIC_VECTOR (31 downto 0);
    signal cmp273_fu_540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp273_reg_891 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp277_fu_545_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp277_reg_896 : STD_LOGIC_VECTOR (0 downto 0);
    signal op2_assign_4_fu_551_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal op2_assign_4_reg_901 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1064_4_fu_560_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1064_4_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1076_fu_594_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1076_reg_911 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln485_fu_601_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln485_reg_916 : STD_LOGIC_VECTOR (0 downto 0);
    signal line_buffer_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_ce0 : STD_LOGIC;
    signal line_buffer_V_we0 : STD_LOGIC;
    signal line_buffer_V_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal line_buffer_V_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal line_buffer_V_ce1 : STD_LOGIC;
    signal line_buffer_V_q1 : STD_LOGIC_VECTOR (23 downto 0);
    signal line_buffer_V_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_1_ce0 : STD_LOGIC;
    signal line_buffer_V_1_we0 : STD_LOGIC;
    signal line_buffer_V_1_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal line_buffer_V_1_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal line_buffer_V_1_ce1 : STD_LOGIC;
    signal line_buffer_V_1_q1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_ap_start : STD_LOGIC;
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_ap_done : STD_LOGIC;
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_ap_idle : STD_LOGIC;
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_ap_ready : STD_LOGIC;
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_in_mat_44_read : STD_LOGIC;
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_line_buffer_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_line_buffer_V_ce0 : STD_LOGIC;
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_line_buffer_V_we0 : STD_LOGIC;
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_line_buffer_V_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_line_buffer_V_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_line_buffer_V_1_ce0 : STD_LOGIC;
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_line_buffer_V_1_we0 : STD_LOGIC;
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_line_buffer_V_1_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_xfUDivResize_fu_178_ap_start : STD_LOGIC;
    signal grp_xfUDivResize_fu_178_ap_done : STD_LOGIC;
    signal grp_xfUDivResize_fu_178_ap_idle : STD_LOGIC;
    signal grp_xfUDivResize_fu_178_ap_ready : STD_LOGIC;
    signal grp_xfUDivResize_fu_186_ap_start : STD_LOGIC;
    signal grp_xfUDivResize_fu_186_ap_done : STD_LOGIC;
    signal grp_xfUDivResize_fu_186_ap_idle : STD_LOGIC;
    signal grp_xfUDivResize_fu_186_ap_ready : STD_LOGIC;
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_ap_start : STD_LOGIC;
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_ap_done : STD_LOGIC;
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_ap_idle : STD_LOGIC;
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_ap_ready : STD_LOGIC;
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_in_mat_44_read : STD_LOGIC;
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_resized_mat_45_din : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_resized_mat_45_write : STD_LOGIC;
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_ce0 : STD_LOGIC;
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_we0 : STD_LOGIC;
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_ce1 : STD_LOGIC;
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_1_ce0 : STD_LOGIC;
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_1_we0 : STD_LOGIC;
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_1_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_1_ce1 : STD_LOGIC;
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_read_pixel_1_out_o : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_read_pixel_1_out_o_ap_vld : STD_LOGIC;
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_indexy_V_1_out : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_indexy_V_1_out_ap_vld : STD_LOGIC;
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_nextYScale_V_1_out : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_nextYScale_V_1_out_ap_vld : STD_LOGIC;
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_ap_start_reg : STD_LOGIC := '0';
    signal grp_xfUDivResize_fu_178_ap_start_reg : STD_LOGIC := '0';
    signal grp_xfUDivResize_fu_186_ap_start_reg : STD_LOGIC := '0';
    signal grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal read_pixel_fu_124 : STD_LOGIC_VECTOR (23 downto 0);
    signal read_rows_count_fu_128 : STD_LOGIC_VECTOR (31 downto 0);
    signal read_rows_count_2_fu_702_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal tmp_fu_132 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_rows_count_fu_651_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal first_row_index_1_fu_136 : STD_LOGIC_VECTOR (31 downto 0);
    signal first_row_index_4_fu_715_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_fu_140 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_2_fu_289_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal nextYScale_V_fu_144 : STD_LOGIC_VECTOR (16 downto 0);
    signal indexy_V_fu_148 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln737_fu_298_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal lhs_fu_302_p3 : STD_LOGIC_VECTOR (41 downto 0);
    signal ret_V_40_fu_310_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal r_V_12_fu_320_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal r_V_12_fu_320_p2 : STD_LOGIC_VECTOR (73 downto 0);
    signal ret_V_fu_325_p2 : STD_LOGIC_VECTOR (73 downto 0);
    signal indexy_pre_comp_V_fu_331_p4 : STD_LOGIC_VECTOR (41 downto 0);
    signal lhs_2_fu_361_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal ret_V_38_fu_365_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal ret_V_22_cast_fu_370_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_36_fu_408_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_fu_388_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i235_i_fu_402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_113_fu_424_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_cast40_cast_cast_fu_416_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln_fu_341_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal indexy_pre_V_fu_430_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_s_fu_452_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln388_fu_438_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal rhs_2_fu_462_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sub_ln1246_fu_470_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln379_1_fu_351_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal icmp_ln902_fu_486_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_i_i_i_i_i286_i_fu_396_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_34_fu_380_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln901_fu_491_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln1064_1_fu_557_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln486_fu_567_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1064_5_fu_573_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln1076_1_fu_585_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1076_2_fu_588_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln485_fu_579_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln1064_fu_614_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1064_fu_618_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln508_fu_623_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1064_3_fu_628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln508_fu_633_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln510_fu_639_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln508_fu_644_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1076_fu_657_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal first_row_index_fu_666_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln521_fu_671_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal read_rows_count_1_fu_685_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1076_fu_661_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1076_fu_697_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_690_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal first_row_index_2_fu_677_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal first_row_index_3_fu_709_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component rt_imp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_mat_44_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        in_mat_44_empty_n : IN STD_LOGIC;
        in_mat_44_read : OUT STD_LOGIC;
        line_buffer_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        line_buffer_V_ce0 : OUT STD_LOGIC;
        line_buffer_V_we0 : OUT STD_LOGIC;
        line_buffer_V_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        line_buffer_V_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        line_buffer_V_1_ce0 : OUT STD_LOGIC;
        line_buffer_V_1_we0 : OUT STD_LOGIC;
        line_buffer_V_1_d0 : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component rt_imp_xfUDivResize IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_n : IN STD_LOGIC_VECTOR (41 downto 0);
        in_d : IN STD_LOGIC_VECTOR (9 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (32 downto 0) );
    end component;


    component rt_imp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_mat_44_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        in_mat_44_empty_n : IN STD_LOGIC;
        in_mat_44_read : OUT STD_LOGIC;
        resized_mat_45_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        resized_mat_45_full_n : IN STD_LOGIC;
        resized_mat_45_write : OUT STD_LOGIC;
        indexy_V : IN STD_LOGIC_VECTOR (16 downto 0);
        zext_ln399 : IN STD_LOGIC_VECTOR (8 downto 0);
        nextYScale_V : IN STD_LOGIC_VECTOR (16 downto 0);
        ret_V_39 : IN STD_LOGIC_VECTOR (16 downto 0);
        and_ln485 : IN STD_LOGIC_VECTOR (0 downto 0);
        line_buffer_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        line_buffer_V_ce0 : OUT STD_LOGIC;
        line_buffer_V_we0 : OUT STD_LOGIC;
        line_buffer_V_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        line_buffer_V_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
        line_buffer_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        line_buffer_V_ce1 : OUT STD_LOGIC;
        line_buffer_V_q1 : IN STD_LOGIC_VECTOR (23 downto 0);
        line_buffer_V_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        line_buffer_V_1_ce0 : OUT STD_LOGIC;
        line_buffer_V_1_we0 : OUT STD_LOGIC;
        line_buffer_V_1_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        line_buffer_V_1_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
        line_buffer_V_1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        line_buffer_V_1_ce1 : OUT STD_LOGIC;
        line_buffer_V_1_q1 : IN STD_LOGIC_VECTOR (23 downto 0);
        first_row_index_5 : IN STD_LOGIC_VECTOR (31 downto 0);
        Xscale64_cast11 : IN STD_LOGIC_VECTOR (32 downto 0);
        cmp89 : IN STD_LOGIC_VECTOR (0 downto 0);
        icmp_ln1076_2 : IN STD_LOGIC_VECTOR (0 downto 0);
        icmp_ln1064_4 : IN STD_LOGIC_VECTOR (0 downto 0);
        Wy_V_1 : IN STD_LOGIC_VECTOR (11 downto 0);
        zext_ln1171 : IN STD_LOGIC_VECTOR (11 downto 0);
        read_pixel_1_out_i : IN STD_LOGIC_VECTOR (23 downto 0);
        read_pixel_1_out_o : OUT STD_LOGIC_VECTOR (23 downto 0);
        read_pixel_1_out_o_ap_vld : OUT STD_LOGIC;
        indexy_V_1_out : OUT STD_LOGIC_VECTOR (16 downto 0);
        indexy_V_1_out_ap_vld : OUT STD_LOGIC;
        nextYScale_V_1_out : OUT STD_LOGIC_VECTOR (16 downto 0);
        nextYScale_V_1_out_ap_vld : OUT STD_LOGIC );
    end component;


    component rt_imp_mul_42s_33ns_74_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (41 downto 0);
        din1 : IN STD_LOGIC_VECTOR (32 downto 0);
        dout : OUT STD_LOGIC_VECTOR (73 downto 0) );
    end component;


    component rt_imp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_line_buffbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (23 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;



begin
    line_buffer_V_U : component rt_imp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_line_buffbkb
    generic map (
        DataWidth => 24,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => line_buffer_V_address0,
        ce0 => line_buffer_V_ce0,
        we0 => line_buffer_V_we0,
        d0 => line_buffer_V_d0,
        q0 => line_buffer_V_q0,
        address1 => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_address1,
        ce1 => line_buffer_V_ce1,
        q1 => line_buffer_V_q1);

    line_buffer_V_1_U : component rt_imp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_line_buffbkb
    generic map (
        DataWidth => 24,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => line_buffer_V_1_address0,
        ce0 => line_buffer_V_1_ce0,
        we0 => line_buffer_V_1_we0,
        d0 => line_buffer_V_1_d0,
        q0 => line_buffer_V_1_q0,
        address1 => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_1_address1,
        ce1 => line_buffer_V_1_ce1,
        q1 => line_buffer_V_1_q1);

    grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168 : component rt_imp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_ap_start,
        ap_done => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_ap_done,
        ap_idle => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_ap_idle,
        ap_ready => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_ap_ready,
        in_mat_44_dout => in_mat_44_dout,
        in_mat_44_empty_n => in_mat_44_empty_n,
        in_mat_44_read => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_in_mat_44_read,
        line_buffer_V_address0 => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_line_buffer_V_address0,
        line_buffer_V_ce0 => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_line_buffer_V_ce0,
        line_buffer_V_we0 => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_line_buffer_V_we0,
        line_buffer_V_d0 => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_line_buffer_V_d0,
        line_buffer_V_1_address0 => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_line_buffer_V_1_address0,
        line_buffer_V_1_ce0 => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_line_buffer_V_1_ce0,
        line_buffer_V_1_we0 => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_line_buffer_V_1_we0,
        line_buffer_V_1_d0 => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_line_buffer_V_1_d0);

    grp_xfUDivResize_fu_178 : component rt_imp_xfUDivResize
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_xfUDivResize_fu_178_ap_start,
        ap_done => grp_xfUDivResize_fu_178_ap_done,
        ap_idle => grp_xfUDivResize_fu_178_ap_idle,
        ap_ready => grp_xfUDivResize_fu_178_ap_ready,
        in_n => ap_const_lv42_28000000000,
        in_d => ap_const_lv10_3E8,
        ap_return => grp_xfUDivResize_fu_178_ap_return);

    grp_xfUDivResize_fu_186 : component rt_imp_xfUDivResize
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_xfUDivResize_fu_186_ap_start,
        ap_done => grp_xfUDivResize_fu_186_ap_done,
        ap_idle => grp_xfUDivResize_fu_186_ap_idle,
        ap_ready => grp_xfUDivResize_fu_186_ap_ready,
        in_n => ap_const_lv42_1E000000000,
        in_d => ap_const_lv10_258,
        ap_return => grp_xfUDivResize_fu_186_ap_return);

    grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194 : component rt_imp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_ap_start,
        ap_done => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_ap_done,
        ap_idle => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_ap_idle,
        ap_ready => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_ap_ready,
        in_mat_44_dout => in_mat_44_dout,
        in_mat_44_empty_n => in_mat_44_empty_n,
        in_mat_44_read => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_in_mat_44_read,
        resized_mat_45_din => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_resized_mat_45_din,
        resized_mat_45_full_n => resized_mat_45_full_n,
        resized_mat_45_write => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_resized_mat_45_write,
        indexy_V => indexy_V_fu_148,
        zext_ln399 => indexy_V_3_reg_847,
        nextYScale_V => nextYScale_V_fu_144,
        ret_V_39 => ret_V_39_reg_859,
        and_ln485 => and_ln485_reg_916,
        line_buffer_V_address0 => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_address0,
        line_buffer_V_ce0 => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_ce0,
        line_buffer_V_we0 => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_we0,
        line_buffer_V_d0 => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_d0,
        line_buffer_V_q0 => line_buffer_V_q0,
        line_buffer_V_address1 => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_address1,
        line_buffer_V_ce1 => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_ce1,
        line_buffer_V_q1 => line_buffer_V_q1,
        line_buffer_V_1_address0 => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_1_address0,
        line_buffer_V_1_ce0 => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_1_ce0,
        line_buffer_V_1_we0 => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_1_we0,
        line_buffer_V_1_d0 => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_1_d0,
        line_buffer_V_1_q0 => line_buffer_V_1_q0,
        line_buffer_V_1_address1 => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_1_address1,
        line_buffer_V_1_ce1 => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_1_ce1,
        line_buffer_V_1_q1 => line_buffer_V_1_q1,
        first_row_index_5 => first_row_index_1_fu_136,
        Xscale64_cast11 => Xscale64_reg_806,
        cmp89 => cmp89_reg_877,
        icmp_ln1076_2 => xor_ln1076_reg_911,
        icmp_ln1064_4 => icmp_ln1064_4_reg_906,
        Wy_V_1 => Wy_V_reg_853,
        zext_ln1171 => Wy_V_reg_853,
        read_pixel_1_out_i => read_pixel_fu_124,
        read_pixel_1_out_o => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_read_pixel_1_out_o,
        read_pixel_1_out_o_ap_vld => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_read_pixel_1_out_o_ap_vld,
        indexy_V_1_out => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_indexy_V_1_out,
        indexy_V_1_out_ap_vld => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_indexy_V_1_out_ap_vld,
        nextYScale_V_1_out => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_nextYScale_V_1_out,
        nextYScale_V_1_out_ap_vld => grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_nextYScale_V_1_out_ap_vld);

    mul_42s_33ns_74_1_1_U98 : component rt_imp_mul_42s_33ns_74_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 42,
        din1_WIDTH => 33,
        dout_WIDTH => 74)
    port map (
        din0 => ret_V_40_fu_310_p2,
        din1 => r_V_12_fu_320_p1,
        dout => r_V_12_fu_320_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_ap_ready = ap_const_logic_1)) then 
                    grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_ap_ready = ap_const_logic_1)) then 
                    grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_xfUDivResize_fu_178_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_xfUDivResize_fu_178_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_xfUDivResize_fu_178_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_xfUDivResize_fu_178_ap_ready = ap_const_logic_1)) then 
                    grp_xfUDivResize_fu_178_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_xfUDivResize_fu_186_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_xfUDivResize_fu_186_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_xfUDivResize_fu_186_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_xfUDivResize_fu_186_ap_ready = ap_const_logic_1)) then 
                    grp_xfUDivResize_fu_186_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    first_row_index_1_fu_136_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                first_row_index_1_fu_136 <= ap_const_lv32_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                first_row_index_1_fu_136 <= first_row_index_4_fu_715_p3;
            end if; 
        end if;
    end process;

    i_fu_140_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_fu_140 <= ap_const_lv10_0;
            elsif (((icmp_ln381_fu_283_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                i_fu_140 <= i_2_fu_289_p2;
            end if; 
        end if;
    end process;

    indexy_V_fu_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indexy_V_fu_148 <= ap_const_lv17_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                indexy_V_fu_148 <= grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_indexy_V_1_out;
            end if; 
        end if;
    end process;

    nextYScale_V_fu_144_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                nextYScale_V_fu_144 <= ap_const_lv17_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                nextYScale_V_fu_144 <= grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_nextYScale_V_1_out;
            end if; 
        end if;
    end process;

    read_rows_count_fu_128_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                read_rows_count_fu_128 <= ap_const_lv32_2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                read_rows_count_fu_128 <= read_rows_count_2_fu_702_p3;
            end if; 
        end if;
    end process;

    tmp_fu_132_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                tmp_fu_132 <= ap_const_lv32_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                tmp_fu_132 <= output_rows_count_fu_651_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln381_fu_283_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                Wy_V_reg_853 <= sub_ln1246_fu_470_p2(23 downto 12);
                indexy_V_3_reg_847 <= indexy_pre_V_fu_430_p3(30 downto 22);
                ret_V_39_reg_859 <= ret_V_39_fu_499_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                Xscale64_reg_806 <= grp_xfUDivResize_fu_178_ap_return;
                Yscale64_reg_811 <= grp_xfUDivResize_fu_186_ap_return;
                conv_i_i_i322_i_cast_reg_821 <= grp_xfUDivResize_fu_186_ap_return(31 downto 10);
                rhs_1_reg_816 <= grp_xfUDivResize_fu_186_ap_return(32 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                and_ln485_reg_916 <= and_ln485_fu_601_p2;
                cmp273_reg_891 <= cmp273_fu_540_p2;
                cmp277_reg_896 <= cmp277_fu_545_p2;
                cmp89_reg_877 <= cmp89_fu_527_p2;
                icmp_ln1064_4_reg_906 <= icmp_ln1064_4_fu_560_p2;
                op2_assign_4_reg_901 <= op2_assign_4_fu_551_p2;
                op2_assign_reg_885 <= op2_assign_fu_534_p2;
                xor_ln1076_reg_911 <= xor_ln1076_fu_594_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                    inscale_V_cast_reg_826(32 downto 0) <= inscale_V_cast_fu_269_p1(32 downto 0);
                    rhs_reg_831(22 downto 0) <= rhs_fu_272_p1(22 downto 0);
                sub_ln902_reg_836 <= sub_ln902_fu_275_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_read_pixel_1_out_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                read_pixel_fu_124 <= grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_read_pixel_1_out_o;
            end if;
        end if;
    end process;
    inscale_V_cast_reg_826(73 downto 33) <= "00000000000000000000000000000000000000000";
    rhs_reg_831(42 downto 23) <= "00000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state4, icmp_ln381_fu_283_p2, grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_ap_done, ap_CS_fsm_state6, ap_block_state2_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((icmp_ln381_fu_283_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    add_i_i_i_i_i286_i_fu_396_p2 <= std_logic_vector(unsigned(ret_V_22_cast_fu_370_p4) + unsigned(ap_const_lv17_1));
    add_ln510_fu_639_p2 <= std_logic_vector(unsigned(tmp_fu_132) + unsigned(ap_const_lv32_1));
    and_ln1076_fu_697_p2 <= (icmp_ln1076_fu_661_p2 and cmp89_reg_877);
    and_ln485_fu_601_p2 <= (or_ln485_fu_579_p2 and cmp273_fu_540_p2);
    and_ln486_fu_567_p2 <= (icmp_ln1064_4_fu_560_p2 and cmp277_fu_545_p2);
    and_ln508_fu_623_p2 <= (icmp_ln1064_fu_618_p2 and cmp277_reg_896);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state2_on_subcall_done)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_ap_done)
    begin
        if ((grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_block_state2_on_subcall_done_assign_proc : process(grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_ap_done, grp_xfUDivResize_fu_178_ap_done, grp_xfUDivResize_fu_186_ap_done)
    begin
                ap_block_state2_on_subcall_done <= ((grp_xfUDivResize_fu_186_ap_done = ap_const_logic_0) or (grp_xfUDivResize_fu_178_ap_done = ap_const_logic_0) or (grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state4, icmp_ln381_fu_283_p2)
    begin
        if ((((icmp_ln381_fu_283_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state4, icmp_ln381_fu_283_p2)
    begin
        if (((icmp_ln381_fu_283_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    cmp273_fu_540_p2 <= "1" when (signed(tmp_fu_132) < signed(ap_const_lv32_258)) else "0";
    cmp277_fu_545_p2 <= "1" when (read_rows_count_fu_128 = ap_const_lv32_1E0) else "0";
    cmp89_fu_527_p2 <= "0" when (read_rows_count_fu_128 = ap_const_lv32_1E0) else "1";
    cmp_i_i235_i_fu_402_p2 <= "1" when (signed(indexy_pre_comp_V_fu_331_p4) > signed(ap_const_lv42_77C00000)) else "0";
    empty_113_fu_424_p2 <= (tmp_35_fu_388_p3 or cmp_i_i235_i_fu_402_p2);
    first_row_index_2_fu_677_p3 <= 
        ap_const_lv32_0 when (icmp_ln521_fu_671_p2(0) = '1') else 
        first_row_index_fu_666_p2;
    first_row_index_3_fu_709_p3 <= 
        first_row_index_2_fu_677_p3 when (cmp89_reg_877(0) = '1') else 
        first_row_index_1_fu_136;
    first_row_index_4_fu_715_p3 <= 
        first_row_index_1_fu_136 when (and_ln1076_fu_697_p2(0) = '1') else 
        first_row_index_3_fu_709_p3;
    first_row_index_fu_666_p2 <= std_logic_vector(unsigned(first_row_index_1_fu_136) + unsigned(ap_const_lv32_1));
    grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_ap_start <= grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_ap_start_reg;
    grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_ap_start <= grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_ap_start_reg;
    grp_xfUDivResize_fu_178_ap_start <= grp_xfUDivResize_fu_178_ap_start_reg;
    grp_xfUDivResize_fu_186_ap_start <= grp_xfUDivResize_fu_186_ap_start_reg;
    i_2_fu_289_p2 <= std_logic_vector(unsigned(i_fu_140) + unsigned(ap_const_lv10_1));
    icmp_ln1064_3_fu_628_p2 <= "1" when (zext_ln1064_fu_614_p1 = op2_assign_4_reg_901) else "0";
    icmp_ln1064_4_fu_560_p2 <= "1" when (zext_ln1064_1_fu_557_p1 = op2_assign_fu_534_p2) else "0";
    icmp_ln1064_5_fu_573_p2 <= "1" when (zext_ln1064_1_fu_557_p1 = op2_assign_4_fu_551_p2) else "0";
    icmp_ln1064_fu_618_p2 <= "1" when (zext_ln1064_fu_614_p1 = op2_assign_reg_885) else "0";
    icmp_ln1076_2_fu_588_p2 <= "1" when (signed(zext_ln1076_1_fu_585_p1) < signed(op2_assign_fu_534_p2)) else "0";
    icmp_ln1076_fu_661_p2 <= "1" when (signed(zext_ln1076_fu_657_p1) < signed(op2_assign_reg_885)) else "0";
    icmp_ln381_fu_283_p2 <= "1" when (i_fu_140 = ap_const_lv10_258) else "0";
    icmp_ln521_fu_671_p2 <= "1" when (first_row_index_fu_666_p2 = ap_const_lv32_3) else "0";
    icmp_ln902_fu_486_p2 <= "0" when (trunc_ln379_1_fu_351_p4 = sub_ln902_reg_836) else "1";

    in_mat_44_read_assign_proc : process(ap_CS_fsm_state2, grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_in_mat_44_read, grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_in_mat_44_read, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            in_mat_44_read <= grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_in_mat_44_read;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            in_mat_44_read <= grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_in_mat_44_read;
        else 
            in_mat_44_read <= ap_const_logic_0;
        end if; 
    end process;

    indexy_pre_V_fu_430_p3 <= 
        p_cast40_cast_cast_fu_416_p3 when (empty_113_fu_424_p2(0) = '1') else 
        trunc_ln_fu_341_p4;
    indexy_pre_comp_V_fu_331_p4 <= ret_V_fu_325_p2(73 downto 32);
    inscale_V_cast_fu_269_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Yscale64_reg_811),74));
        lhs_2_fu_361_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(indexy_pre_comp_V_fu_331_p4),43));

    lhs_fu_302_p3 <= (trunc_ln737_fu_298_p1 & ap_const_lv22_0);

    line_buffer_V_1_address0_assign_proc : process(ap_CS_fsm_state2, grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_line_buffer_V_1_address0, grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_1_address0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            line_buffer_V_1_address0 <= grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            line_buffer_V_1_address0 <= grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_line_buffer_V_1_address0;
        else 
            line_buffer_V_1_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    line_buffer_V_1_ce0_assign_proc : process(ap_CS_fsm_state2, grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_line_buffer_V_1_ce0, grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_1_ce0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            line_buffer_V_1_ce0 <= grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            line_buffer_V_1_ce0 <= grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_line_buffer_V_1_ce0;
        else 
            line_buffer_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_1_ce1_assign_proc : process(grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_1_ce1, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            line_buffer_V_1_ce1 <= grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_1_ce1;
        else 
            line_buffer_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_1_d0_assign_proc : process(ap_CS_fsm_state2, grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_line_buffer_V_1_d0, grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_1_d0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            line_buffer_V_1_d0 <= grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_1_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            line_buffer_V_1_d0 <= grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_line_buffer_V_1_d0;
        else 
            line_buffer_V_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_V_1_we0_assign_proc : process(ap_CS_fsm_state2, grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_line_buffer_V_1_we0, grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_1_we0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            line_buffer_V_1_we0 <= grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_1_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            line_buffer_V_1_we0 <= grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_line_buffer_V_1_we0;
        else 
            line_buffer_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_address0_assign_proc : process(ap_CS_fsm_state2, grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_line_buffer_V_address0, grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_address0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            line_buffer_V_address0 <= grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            line_buffer_V_address0 <= grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_line_buffer_V_address0;
        else 
            line_buffer_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    line_buffer_V_ce0_assign_proc : process(ap_CS_fsm_state2, grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_line_buffer_V_ce0, grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_ce0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            line_buffer_V_ce0 <= grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            line_buffer_V_ce0 <= grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_line_buffer_V_ce0;
        else 
            line_buffer_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_ce1_assign_proc : process(grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_ce1, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            line_buffer_V_ce1 <= grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_ce1;
        else 
            line_buffer_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_d0_assign_proc : process(ap_CS_fsm_state2, grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_line_buffer_V_d0, grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_d0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            line_buffer_V_d0 <= grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            line_buffer_V_d0 <= grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_line_buffer_V_d0;
        else 
            line_buffer_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_V_we0_assign_proc : process(ap_CS_fsm_state2, grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_line_buffer_V_we0, grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_we0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            line_buffer_V_we0 <= grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_line_buffer_V_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            line_buffer_V_we0 <= grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_331_1_VITIS_LOOP_336_2_fu_168_line_buffer_V_we0;
        else 
            line_buffer_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    op2_assign_4_fu_551_p2 <= std_logic_vector(unsigned(read_rows_count_fu_128) + unsigned(ap_const_lv32_FFFFFFFE));
    op2_assign_fu_534_p2 <= std_logic_vector(unsigned(read_rows_count_fu_128) + unsigned(ap_const_lv32_FFFFFFFF));
    or_ln485_fu_579_p2 <= (icmp_ln1064_5_fu_573_p2 or and_ln486_fu_567_p2);
    or_ln508_fu_633_p2 <= (icmp_ln1064_3_fu_628_p2 or and_ln508_fu_623_p2);
    output_rows_count_fu_651_p3 <= 
        select_ln508_fu_644_p3 when (cmp273_reg_891(0) = '1') else 
        tmp_fu_132;
    p_cast40_cast_cast_fu_416_p3 <= 
        ap_const_lv31_0 when (tmp_36_fu_408_p3(0) = '1') else 
        ap_const_lv31_77C00000;
    r_V_12_fu_320_p1 <= inscale_V_cast_reg_826(33 - 1 downto 0);
    read_rows_count_1_fu_685_p2 <= std_logic_vector(unsigned(read_rows_count_fu_128) + unsigned(ap_const_lv32_1));
    read_rows_count_2_fu_702_p3 <= 
        read_rows_count_fu_128 when (and_ln1076_fu_697_p2(0) = '1') else 
        sel_tmp1_fu_690_p3;
    resized_mat_45_din <= grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_resized_mat_45_din;

    resized_mat_45_write_assign_proc : process(grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_resized_mat_45_write, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            resized_mat_45_write <= grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_resized_mat_45_write;
        else 
            resized_mat_45_write <= ap_const_logic_0;
        end if; 
    end process;

    ret_V_22_cast_fu_370_p4 <= ret_V_38_fu_365_p2(38 downto 22);
    ret_V_38_fu_365_p2 <= std_logic_vector(signed(lhs_2_fu_361_p1) + signed(rhs_reg_831));
    ret_V_39_fu_499_p3 <= 
        select_ln901_fu_491_p3 when (tmp_34_fu_380_p3(0) = '1') else 
        ret_V_22_cast_fu_370_p4;
    ret_V_40_fu_310_p2 <= (lhs_fu_302_p3 or ap_const_lv42_200000);
    ret_V_fu_325_p2 <= std_logic_vector(unsigned(r_V_12_fu_320_p2) + unsigned(ap_const_lv74_3FFFFE0000000000000));
    rhs_2_fu_462_p3 <= (tmp_s_fu_452_p4 & ap_const_lv22_0);
    rhs_fu_272_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_1_reg_816),43));
    sel_tmp1_fu_690_p3 <= 
        read_rows_count_1_fu_685_p2 when (cmp89_reg_877(0) = '1') else 
        ap_const_lv32_1E0;
    select_ln508_fu_644_p3 <= 
        add_ln510_fu_639_p2 when (or_ln508_fu_633_p2(0) = '1') else 
        tmp_fu_132;
    select_ln901_fu_491_p3 <= 
        add_i_i_i_i_i286_i_fu_396_p2 when (icmp_ln902_fu_486_p2(0) = '1') else 
        ret_V_22_cast_fu_370_p4;
    sub_ln1246_fu_470_p2 <= std_logic_vector(unsigned(trunc_ln388_fu_438_p1) - unsigned(rhs_2_fu_462_p3));
    sub_ln902_fu_275_p2 <= std_logic_vector(unsigned(ap_const_lv22_0) - unsigned(conv_i_i_i322_i_cast_reg_821));
    tmp_34_fu_380_p3 <= ret_V_38_fu_365_p2(42 downto 42);
    tmp_35_fu_388_p3 <= ret_V_fu_325_p2(73 downto 73);
    tmp_36_fu_408_p3 <= ret_V_fu_325_p2(73 downto 73);
    tmp_s_fu_452_p4 <= indexy_pre_V_fu_430_p3(23 downto 22);
    trunc_ln379_1_fu_351_p4 <= ret_V_fu_325_p2(53 downto 32);
    trunc_ln388_fu_438_p1 <= indexy_pre_V_fu_430_p3(24 - 1 downto 0);
    trunc_ln737_fu_298_p1 <= tmp_fu_132(20 - 1 downto 0);
    trunc_ln_fu_341_p4 <= ret_V_fu_325_p2(62 downto 32);
    xor_ln1076_fu_594_p2 <= (icmp_ln1076_2_fu_588_p2 xor ap_const_lv1_1);
    zext_ln1064_1_fu_557_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(indexy_V_3_reg_847),32));
    zext_ln1064_fu_614_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_indexy_V_1_out),32));
    zext_ln1076_1_fu_585_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_39_reg_859),32));
    zext_ln1076_fu_657_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_resizeNNBilinear_9_480_640_1_600_1000_1_2_Pipeline_VITIS_LOOP_388_5_fu_194_nextYScale_V_1_out),32));
end behav;
