#
# General settings
#
#   TargetBoard - board to run you application on
#   TargetOS    - operating system to use
#   SystemClock - clock of the ReconOS system
#   CFlags      - additional flags for compilation
#   LdFlags     - additional flags for linking
#
[General]
Name = ReconROSVitisExample
TargetBoard = zcu104,0
TargetPart = xczu7ev-ffvc1156-2-e
ReferenceDesign = timer_hwpr
TargetOS = linux64
#TargetOS = linux_x86
TargetXil = vivado,2020.1
TargetHls = vivado,2020.1
SystemClock = System
CFlags = -g -I $(RECONOS)/linux/tools/timer -I ../ -I ../Thirdparty/Pangolin/include -I /usr/include/eigen3/ -O3 -Wno-deprecated -Wno-unused-variable -Wno-deprecated-declarations -Wno-sign-compare -Wno-unused-label
LdFlags = -lm -lstdc++ `pkg-config --cflags --libs opencv` 
PartialReconfiguration = true
ROS2Distribution = dashing
Hls_CFlags = -std=c++0x -I /home/christian/git/ReconROS_Vitis/hls_include/Vitis_Libraries/vision/L1/include
CPUArchitecture = arm64

TargetBoardAddress  = 192.168.188.54
TargetBoardUser     = root
TargetBoardPassword = xilinx



#
# Clock definition
#
#   ClockSource - static or reconfigurable clock
#   ClockFreq   - initial clock frequency
#
[Clock@System]
ClockSource = static
ClockFreq = 100000000

[Clock@Threads]
ClockSource = dynamic
ClockFreq = 120000000


#
# Specification of hardware thread slots
#
#   Id               - id of the slot
#   Clock            - clock connected to the slot
#

[HwSlot@SlotFixed0(0:0)]
Id = 0
Clock = Threads
Reconfigurable = false


# Resource definition
#
#   <Name> - type,<optional arguments>
#


[ResourceGroup@RGaussianBlur]
camera_image = rosmsg, sensor_msgs ,msg ,Image 
output_image = rosmsg, sensor_msgs ,msg ,Image 
node_1 = rosnode, "gaussianblur"
SubData = rossub, node_1, camera_image, "/image_raw", 10000
PubOut  = rospub, node_1, output_image, "/camera/image_gaussianfiltered"


#
# Specification of thread types
#
#   Slot          - slot to implement the hardware thread in
#   Source        - source if the hardware thread
#   ResourceGroup - resources of the hardware thread
#

[ReconosThread@Gaussian]
Slot = SlotFixed0(0)
HwSource = hls
SwSource = c
ResourceGroup = RGaussianBlur





